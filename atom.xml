<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Litao&#39;s Blog</title>
  <subtitle>一个不太勤快的程序猿，偶尔写写自己的心得。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://litao.work/"/>
  <updated>2017-09-15T10:01:13.435Z</updated>
  <id>http://litao.work/</id>
  
  <author>
    <name>李滔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Route命令</title>
    <link href="http://litao.work/2017/09/15/route%E5%91%BD%E4%BB%A4/"/>
    <id>http://litao.work/2017/09/15/route命令/</id>
    <published>2017-09-15T09:57:00.000Z</published>
    <updated>2017-09-15T10:01:13.435Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在/etc/rc.local中添加route命令来保证该路由设置永久有效。<br><a id="more"></a><br>转自<a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html" target="_blank" rel="external">每天一个linux命令（53）：route命令</a><br>1．命令格式：<br>route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]]<br>2．命令功能：<br>Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用”add”或者”del”参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。<br>3．命令参数：<br>-c 显示更多信息<br>-n 不解析名字<br>-v 显示详细的处理信息<br>-F 显示发送信息<br>-C 显示路由缓存<br>-f 清除所有网关入口的路由表。<br>-p 与 add 命令一起使用时使路由具有永久性。</p>
</blockquote>
<p>add:添加一条新路由。<br>del:删除一条路由。<br>-net:目标地址是一个网络。<br>-host:目标地址是一个主机。<br>netmask:当添加一个网络路由时，需要使用网络掩码。<br>gw:路由数据包通过网关。注意，你指定的网关必须能够达到。<br>metric：设置路由跳数。<br>Command 指定您想运行的命令 (Add/Change/Delete/Print)。<br>Destination 指定该路由的网络目标。<br>mask Netmask 指定与网络目标相关的网络掩码（也被称作子网掩码）。<br>Gateway 指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。<br>metric Metric 为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。<br>if Interface 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。<br>4．使用实例：<br>实例1：显示当前路由<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route</div><div class="line">route -n</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">e192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">0.0.0.0         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div></pre></td></tr></table></figure></p>
<p>说明：<br>第一行表示主机所在网络的地址为192.168.120.0，若数据传送目标是在本局域网内通信，则可直接通过eth0转发数据包;<br>第四行表示数据传送目的是访问Internet，则由接口eth0，将数据包发送到网关192.168.120.240<br>其中Flags为路由标志，标记当前网络节点的状态。<br>Flags标志说明：<br>U Up表示此路由当前为启动状态<br>H Host，表示此网关为一主机<br>G Gateway，表示此网关为一路由器<br>R Reinstate Route，使用动态路由重新初始化的路由<br>D Dynamically,此路由是动态性地写入<br>M Modified，此路由是由路由守护程序或导向器动态修改<br>! 表示此路由当前为关闭状态<br>备注：<br>route -n (-n 表示不解析名字,列出速度会比route 快)<br>实例2：添加网关/设置网关<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
<p>说明：<br>增加一条 到达244.0.0.0的路由<br>实例3：屏蔽一条路由<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route add -net 224.0.0.0 netmask 240.0.0.0 reject</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 reject</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div></pre></td></tr></table></figure></p>
<p>说明：<br>增加一条屏蔽的路由，目的地址为 224.x.x.x 将被拒绝<br>实例4：删除路由记录<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route del -net 224.0.0.0 netmask 240.0.0.0</div><div class="line">route del -net 224.0.0.0 netmask 240.0.0.0 reject</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0 reject</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
<p>说明：<br>实例5：删除和添加设置默认网关<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route del default gw 192.168.120.240</div><div class="line">route add default gw 192.168.120.240</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route del default gw 192.168.120.240</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route add default gw 192.168.120.240</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在/etc/rc.local中添加route命令来保证该路由设置永久有效。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="转载" scheme="http://litao.work/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Win10和deepin双系统时间差8小时解决方案</title>
    <link href="http://litao.work/2017/09/08/Win10%E5%92%8Cdeepin%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://litao.work/2017/09/08/Win10和deepin双系统时间差8小时解决方案/</id>
    <published>2017-09-08T02:58:15.000Z</published>
    <updated>2017-09-08T00:48:54.272Z</updated>
    
    <content type="html"><![CDATA[<p>在电脑中同时安装Windows和Linux操作系统时，可能会发生系统时间不一致的现象。以北京时间为例，两者相差8小时。<br><a id="more"></a><br>Linux系统会将UTC时间写入到了BIOS时钟内，在运行时会根据当前时区计算出本地时间。例如，如果UTC时间为7月1日0点0分，系统时区设置为东8区的Asia/Harbin，那么Linux系统的实际显示时间会是7月1日8点0分。</p>
<p>Windows系统将本地时间写入到了BIOS时钟内，在运行时直接显示本地时间。</p>
<p>所以安装Linux后，两个系统会有时间差。对于Windows 10  来讲，可以通过修改注册表的方法使Windows将BIOS时间识别为UTC时间。</p>
<p>按下win+R输入<code>regedit</code>打开注册表，找到下面这一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation</div></pre></td></tr></table></figure></p>
<p>键，在其下面新建DWORD 32bit类型的项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RealTimeIsUniversal</div></pre></td></tr></table></figure></p>
<p>设置其值为1，保存后退出，重新系统即可。</p>
<p><img src="http://static.zybuluo.com/danerlt/umebq8w7wgy32l2kq2bv8ilf/image_1bpertpkp17vh4v31ica189i9ne9.png" alt="images"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在电脑中同时安装Windows和Linux操作系统时，可能会发生系统时间不一致的现象。以北京时间为例，两者相差8小时。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="windows" scheme="http://litao.work/tags/windows/"/>
    
      <category term="solution" scheme="http://litao.work/tags/solution/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next添加访客量</title>
    <link href="http://litao.work/2017/08/30/hexo-next%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E9%87%8F/"/>
    <id>http://litao.work/2017/08/30/hexo-next添加访客量/</id>
    <published>2017-08-30T10:15:16.000Z</published>
    <updated>2017-08-30T10:17:40.502Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转载自：Jey Zhang :<a href="http://www.jeyzhang.com/hexo-next-add-post-views.html" target="_blank" rel="external">Hexo的NexT主题个性化：添加文章阅读量</a></p>
</blockquote>
<p>关于Hexo的文章阅读量设置问题，大多数人都是使用<a href="http://service.ibruce.info/" target="_blank" rel="external">不蒜子</a>的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。<br><a id="more"></a><br>下面介绍如何在首页及文章页面都显示<code>文章的阅读量</code>，显示效果如下：</p>
<p><img src="http://i.imgur.com/AMdIdpW.png" alt=""></p>
<hr>
<h2 id="配置LeanCloud"><a href="#配置LeanCloud" class="headerlink" title="配置LeanCloud"></a><strong>配置<a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud</a></strong></h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>打开LeanCloud官网，进入<a href="https://leancloud.cn/login.html#/signup" target="_blank" rel="external">注册页面</a>注册。完成邮箱激活后，点击头像，进入<code>控制台</code>页面，如下：</p>
<p><img src="http://i.imgur.com/WyRLYr3.png" alt=""></p>
<h3 id="创建新应用"><a href="#创建新应用" class="headerlink" title="创建新应用"></a>创建新应用</h3><p>创建一个新应用(类型为<code>JavaScript SDK</code>)，点击应用进入；</p>
<p>创建名称为<code>Counter</code>的Class</p>
<p><img src="http://i.imgur.com/5VUiBAy.png" alt=""></p>
<p><img src="http://i.imgur.com/C8LWKT2.png" alt=""></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>编辑网站根目录下的<code>_config.yml</code>文件，添加如下：</p>
<pre><code># add post views
leancloud_visitors:
  enable: true
  app_id: **你的app_id**
  app_key: **你的app_key**
</code></pre><p>其中，app_id和app_key在你所创建的应用的<code>设置-&gt;应用Key</code>中。</p>
<h3 id="Web安全性"><a href="#Web安全性" class="headerlink" title="Web安全性"></a>Web安全性</h3><p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在<code>应用-&gt;设置-&gt;安全中心</code>的<code>Web安全域名</code>中加入自己的博客域名，以保证数据的调用安全。</p>
<h2 id="修改NexT主题文件"><a href="#修改NexT主题文件" class="headerlink" title="修改NexT主题文件"></a><strong>修改NexT主题文件</strong></h2><h3 id="添加lean-analytics-swig文件"><a href="#添加lean-analytics-swig文件" class="headerlink" title="添加lean-analytics.swig文件"></a>添加lean-analytics.swig文件</h3><p>在主题目录下的<code>\layout\_scripts</code>路径下，新建一个名称为<code>lean-analytics.swig</code>的文件，并添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">&lt;!-- custom analytics part create by xiamo --&gt;</div><div class="line">&lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function showTime(Counter) &#123;</div><div class="line">	var query = new AV.Query(Counter);</div><div class="line">	$(&quot;.leancloud_visitors&quot;).each(function() &#123;</div><div class="line">		var url = $(this).attr(&quot;id&quot;).trim();</div><div class="line">		query.equalTo(&quot;url&quot;, url);</div><div class="line">		query.find(&#123;</div><div class="line">			success: function(results) &#123;</div><div class="line">				if (results.length == 0) &#123;</div><div class="line">					var content = &apos;0 &apos; + $(document.getElementById(url)).text();</div><div class="line">					$(document.getElementById(url)).text(content);</div><div class="line">					return;</div><div class="line">				&#125;</div><div class="line">				for (var i = 0; i &lt; results.length; i++) &#123;</div><div class="line">					var object = results[i];</div><div class="line">					var content = object.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">					$(document.getElementById(url)).text(content);</div><div class="line">				&#125;</div><div class="line">			&#125;,</div><div class="line">			error: function(object, error) &#123;</div><div class="line">				console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line"></div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">function addCount(Counter) &#123;</div><div class="line">	var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">	url = $(&quot;.leancloud_visitors&quot;).attr(&apos;id&apos;).trim();</div><div class="line">	title = $(&quot;.leancloud_visitors&quot;).attr(&apos;data-flag-title&apos;).trim();</div><div class="line">	var query = new AV.Query(Counter);</div><div class="line">	query.equalTo(&quot;url&quot;, url);</div><div class="line">	query.find(&#123;</div><div class="line">		success: function(results) &#123;</div><div class="line">			if (results.length &gt; 0) &#123;</div><div class="line">				var counter = results[0];</div><div class="line">				counter.fetchWhenSave(true);</div><div class="line">				counter.increment(&quot;time&quot;);</div><div class="line">				counter.save(null, &#123;</div><div class="line">					success: function(counter) &#123;</div><div class="line">						var content =  counter.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">						$(document.getElementById(url)).text(content);</div><div class="line">					&#125;,</div><div class="line">					error: function(counter, error) &#123;</div><div class="line">						console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</div><div class="line">					&#125;</div><div class="line">				&#125;);</div><div class="line">			&#125; else &#123;</div><div class="line">				var newcounter = new Counter();</div><div class="line">				newcounter.set(&quot;title&quot;, title);</div><div class="line">				newcounter.set(&quot;url&quot;, url);</div><div class="line">				newcounter.set(&quot;time&quot;, 1);</div><div class="line">				newcounter.save(null, &#123;</div><div class="line">					success: function(newcounter) &#123;</div><div class="line">					    console.log(&quot;newcounter.get(&apos;time&apos;)=&quot;+newcounter.get(&apos;time&apos;));</div><div class="line">						var content = newcounter.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">						$(document.getElementById(url)).text(content);</div><div class="line">					&#125;,</div><div class="line">					error: function(newcounter, error) &#123;</div><div class="line">						console.log(&apos;Failed to create&apos;);</div><div class="line">					&#125;</div><div class="line">				&#125;);</div><div class="line">			&#125;</div><div class="line">		&#125;,</div><div class="line">		error: function(error) &#123;</div><div class="line">			console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line">$(function() &#123;</div><div class="line">	var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">	if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</div><div class="line">		addCount(Counter);</div><div class="line">	&#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</div><div class="line">		showTime(Counter);</div><div class="line">	&#125;</div><div class="line">&#125;); </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>其中，控制显示的格式的主要为<code>content</code>变量，按自己的需求相应修改即可。</p>
<h3 id="修改post-swig文件"><a href="#修改post-swig文件" class="headerlink" title="修改post.swig文件"></a>修改post.swig文件</h3><p>在主题的<code>layout\_macro</code>路径下，编辑<code>post.swig</code>文件，找到相应的插入位置（大概在98行左右）：</p>
<p><img src="http://i.imgur.com/l21gZ2f.png" alt=""></p>
<p>插入如下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">&amp;nbsp; | &amp;nbsp;</div><div class="line">&lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">         &amp;nbsp;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125;</div><div class="line">        &lt;/span&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h3 id="修改layout-swig文件"><a href="#修改layout-swig文件" class="headerlink" title="修改layout.swig文件"></a>修改layout.swig文件</h3><p>在主题目录下的<code>layout</code>目录下，编辑<code>_layout.swig</code>文件，在<code>&lt;/body&gt;</code>的上方（大概在70行左右）插入如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">&#123;% include &apos;_scripts/lean-analytics.swig&apos; %&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h3 id="修改语言配置文件"><a href="#修改语言配置文件" class="headerlink" title="修改语言配置文件"></a>修改语言配置文件</h3><p>如果你的网站使用的是英语，则只需要编辑主题目录下的<code>languages\en.yml</code>文件，增加<code>post</code>字段如下：</p>
<pre><code>post:
  sticky: Sticky
  posted: Posted on
  visitors: Views // 增加的字段
  ...
</code></pre><p>如果网站使用的是中文，则编辑<code>languages\zh-Hans.yml</code>文件，相应的增加</p>
<pre><code>post:
  posted: 发表于
  visitors: 阅读次数
  ...
</code></pre><p>其他语言与之类似，将<code>visitors</code>设置成你希望翻译的字段。</p>
<p><strong>最后，重新生成并部署你的网站即可。</strong></p>
<h2 id="增加网站的浏览次数与访客数量统计功能"><a href="#增加网站的浏览次数与访客数量统计功能" class="headerlink" title="增加网站的浏览次数与访客数量统计功能"></a><strong>增加网站的浏览次数与访客数量统计功能</strong></h2><p>网站的浏览次数，即<code>pv</code>；网站的访客数为<code>uv</code>。<code>pv</code>的计算方式是，单个用户连续点击n篇文章，记录n次访问量；<code>uv</code>的计算方式是，单个用户连续点击n篇文章，只记录1次访客数。你可以根据需要添加相应的统计功能。</p>
<h2 id="安装busuanzi-js脚本"><a href="#安装busuanzi-js脚本" class="headerlink" title="安装busuanzi.js脚本"></a>安装<code>busuanzi.js</code>脚本</h2><p>如果你使用的是NexT主题（其他主题类似），打开<code>/theme/next/layout/_partial/footer.swig</code>文件，拷贝下面的代码至文件的开头。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="显示统计标签"><a href="#显示统计标签" class="headerlink" title="显示统计标签"></a>显示统计标签</h2><p>同样编辑<code>/theme/next/layout/_partial/footer.swig</code>文件。</p>
<p>如果你想要显示<code>pv</code>统计量，复制以下代码至你想要放置的位置，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure>
<p>如果你想要显示<code>uv</code>统计量，复制以下代码至你想要放置的位置，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载自：Jey Zhang :&lt;a href=&quot;http://www.jeyzhang.com/hexo-next-add-post-views.html&quot;&gt;Hexo的NexT主题个性化：添加文章阅读量&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于Hexo的文章阅读量设置问题，大多数人都是使用&lt;a href=&quot;http://service.ibruce.info/&quot;&gt;不蒜子&lt;/a&gt;的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="hexo" scheme="http://litao.work/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置MySQL</title>
    <link href="http://litao.work/2017/08/30/docker%E9%85%8D%E7%BD%AEMySQL/"/>
    <id>http://litao.work/2017/08/30/docker配置MySQL/</id>
    <published>2017-08-30T09:37:21.000Z</published>
    <updated>2017-08-30T09:45:34.526Z</updated>
    
    <content type="html"><![CDATA[<p>在学习python的时候,看到需要使用mysql数据库,又不想在windows上安装mysql,遂决定使用docker来配置mysql.</p>
<p>参考<a href="https://hub.docker.com/_/mysql/" target="_blank" rel="external">docker mysql 官方说明</a>.<br><a id="more"></a></p>
<h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><p>首先使用 <code>docker pull</code>命令获取镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">C:\Users\tao&gt;docker pull mysql:5.7</div><div class="line">5.7: Pulling from library/mysql</div><div class="line">ad74af05f5a2: Already exists</div><div class="line">0639788facc8: Pull complete</div><div class="line">de70fa77eb2b: Pull complete</div><div class="line">724179e94999: Pull complete</div><div class="line">50c77fb16ba6: Pull complete</div><div class="line">d51f459239fb: Pull complete</div><div class="line">937bbdd4305a: Pull complete</div><div class="line">35369f9634e1: Pull complete</div><div class="line">f6016aab25f1: Pull complete</div><div class="line">5f1901e920da: Pull complete</div><div class="line">fdf808213c5b: Pull complete</div><div class="line">Digest: sha256:96edf37370df96d2a4ee1715cc5c7820a0ec6286551a927981ed50f0273d9b43</div><div class="line">Status: Downloaded newer image for mysql:5.7</div></pre></td></tr></table></figure></p>
<h2 id="启动MySQL服务器实例"><a href="#启动MySQL服务器实例" class="headerlink" title="启动MySQL服务器实例"></a>启动MySQL服务器实例</h2><p>启动MySQL实例很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</div></pre></td></tr></table></figure></p>
<p>其中<code>some-mysql</code>是要分配给容器的名称，<code>my-secret-pw</code>是要为MySQL root用户设置的密码，标签是指定所需MySQL版本的标签。比如说我的数据库名字是<code>test</code>,密码也为<code>test</code>,我就可以像下面这样设.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run --name test -e MYSQL_ROOT_PASSWORD=test -d mysql:5.7</div></pre></td></tr></table></figure></p>
<h2 id="从另一个Docker容器中的应用程序连接到MySQL"><a href="#从另一个Docker容器中的应用程序连接到MySQL" class="headerlink" title="从另一个Docker容器中的应用程序连接到MySQL"></a>从另一个Docker容器中的应用程序连接到MySQL</h2><p>本镜像会暴露 MySQL 的标准端口 3306，你可以使用 link 功能来让其他应用容器能够访问 MySQL 容器，就像下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name some-app --link some-mysql:mysql -d app-that-uses-mysql</div></pre></td></tr></table></figure></p>
<h2 id="从MySQL命令行客户端连接到MySQL"><a href="#从MySQL命令行客户端连接到MySQL" class="headerlink" title="从MySQL命令行客户端连接到MySQL"></a>从MySQL命令行客户端连接到MySQL</h2><p>以下命令启动另一个mysql容器实例，并对你的原始mysql容器运行mysql命令行，允许您针对数据库实例执行SQL语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker exec -it test mysql -u root -p</div></pre></td></tr></table></figure></p>
<p>输入密码就进入到常见的myssql终端了.<br>![conn mysql comand][1]</p>
<h2 id="使用本地连接MySQL容器"><a href="#使用本地连接MySQL容器" class="headerlink" title="使用本地连接MySQL容器"></a>使用本地连接MySQL容器</h2><p>首先运行MySQL容器，使用<code>-p</code>制定本地端口和容器端口的映射。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name samle-mysql -p 33060:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</div></pre></td></tr></table></figure></p>
<p>然后使用MySQL的<code>-h</code>指定主机，<code>-P</code>指定端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">$ mysql -h 0.0.0.0 -P 33060 -u root -p </div><div class="line">Enter password: </div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 5</div><div class="line">Server version: 5.7.19 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; create database test;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| sys                |</div><div class="line">| test               |</div><div class="line">+--------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; use test;</div><div class="line">Database changed</div><div class="line">mysql&gt; show tables;</div><div class="line">Empty set (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>使用<code>docker exec</code>运行MySQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ docker exec -it samle-mysql mysql -u root -p</div><div class="line">Enter password: </div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 7</div><div class="line">Server version: 5.7.19 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| sys                |</div><div class="line">| test               |</div><div class="line">+--------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; use test;</div><div class="line">Database changed</div><div class="line">mysql&gt; create table hello(id int);</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>再回到Linux终端，查看table是否增加就可以看出本地连接MySQL容器就成功了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show tables;</div><div class="line">+----------------+</div><div class="line">| Tables_in_test |</div><div class="line">+----------------+</div><div class="line">| hello          |</div><div class="line">+----------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习python的时候,看到需要使用mysql数据库,又不想在windows上安装mysql,遂决定使用docker来配置mysql.&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;https://hub.docker.com/_/mysql/&quot;&gt;docker mysql 官方说明&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="docker" scheme="http://litao.work/tags/docker/"/>
    
      <category term="mysql" scheme="http://litao.work/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装配置</title>
    <link href="http://litao.work/2017/08/30/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://litao.work/2017/08/30/docker笔记/</id>
    <published>2017-08-30T08:21:02.000Z</published>
    <updated>2017-08-30T08:25:48.296Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。<br><a id="more"></a></p>
<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>官方网站上有各种环境下的 <a href="https://docs.docker.com/installation/#installation" target="_blank" rel="external">安装指南</a></p>
<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><p>阿里云的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure></p>
</blockquote>
<p>DaoCloud 的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/docker | sh</div></pre></td></tr></table></figure></p>
<h3 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h3><p>国内访问 Docker Hub 有时会遇到困难，此时可以配置镜像加速器。国内很多云服务商都提供了加速器服务，例如：</p>
<ul>
<li>阿里云加速器</li>
<li>DaoCloud 加速器</li>
<li>灵雀云加速器</li>
</ul>
<p>注册用户并且申请加速器，会获得如 <a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a> 这样的地址。我们需要将其配置给 Docker 引擎。</p>
<h4 id="Ubuntu-14-04、Debian-7-Wheezy"><a href="#Ubuntu-14-04、Debian-7-Wheezy" class="headerlink" title="Ubuntu 14.04、Debian 7 Wheezy"></a>Ubuntu 14.04、Debian 7 Wheezy</h4><p>对于使用 <strong>upstart</strong> 的系统而言，编辑 <code>/etc/default/docker</code> 文件，在其中的 DOCKER_OPTS 中添加获得的加速器配置 –registry-mirror=&lt;加速器地址&gt;，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DOCKER_OPTS=&quot;--registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com&quot;</div></pre></td></tr></table></figure>
<p>重新启动服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo service docker restart</div></pre></td></tr></table></figure></p>
<h4 id="Ubuntu-16-04、Debian-8-Jessie、CentOS-7"><a href="#Ubuntu-16-04、Debian-8-Jessie、CentOS-7" class="headerlink" title="Ubuntu 16.04、Debian 8 Jessie、CentOS 7"></a>Ubuntu 16.04、Debian 8 Jessie、CentOS 7</h4><p>对于使用 <strong>systemd</strong> 的系统，用 <code>systemctl enable docker</code> 启用服务后，编辑 <code>/etc/systemd/system/multi-user.target.wants/docker.service</code> 文件，找到 <code>ExecStart=</code> 这一行，在这行最后添加加速器地址 <code>--registry-mirror=&lt;加速器地址&gt;</code>，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecStart=/usr/bin/dockerd --registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com</div></pre></td></tr></table></figure></p>
<p>注：对于 1.12 以前的版本，dockerd 换成 docker daemon。</p>
<p>重新加载配置并且重新启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo systemctl daemon-reload</div><div class="line">$ sudo systemctl restart docker</div></pre></td></tr></table></figure></p>
<h4 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h4><p>对于使用 WINDOWS 10 的系统，在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写如阿里云、DaoCloud之类的加速器地址，如：</p>
<p>{<br>  “registry-mirrors”: [<br>    “<a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a>“<br>  ],<br>  “insecure-registries”: []<br>}<br>编辑完成，点击Apply保存后Docker服务会重新启动。</p>
<h2 id="使用镜像"><a href="#使用镜像" class="headerlink" title="使用镜像"></a>使用镜像</h2><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><p>命令: <code>docker pull</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull [选项] [Docker Registry地址]&lt;仓库名&gt;:&lt;标签&gt;</div></pre></td></tr></table></figure></p>
<p>Docker Registry地址：地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub。<br>仓库名：如之前所说，这里的仓库名是两段式名称，既 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像.</p>
<h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p>命令: <code>docker images</code><br>查看结果包含了仓库名、标签、镜像 ID、创建时间以及所占用的空间。</p>
<h3 id="定制镜像"><a href="#定制镜像" class="headerlink" title="定制镜像"></a>定制镜像</h3><p>命令:<code>docker build</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker build [选项] &lt;上下文路径/URL/-&gt;</div></pre></td></tr></table></figure></p>
<p>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">###注意,下面这种方式要进入到Dockerfile的目录下执行</div><div class="line">docker build -t nginx:v3 .</div><div class="line">docker build https://github.com/twang2218/gitlab-ce-zh.git</div><div class="line">docker build http://server/context.tar.gz</div><div class="line">docker build - &lt; Dockerfile</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="docker" scheme="http://litao.work/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Ajax笔记</title>
    <link href="http://litao.work/2017/08/30/Ajax%E7%AC%94%E8%AE%B0/"/>
    <id>http://litao.work/2017/08/30/Ajax笔记/</id>
    <published>2017-08-30T08:06:55.000Z</published>
    <updated>2017-08-30T08:16:30.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>参考链接：<br><a href="http://www.jianshu.com/p/a47120678b86#" target="_blank" rel="external">简书橙小张</a></p>
</blockquote>
<p><strong>背景描述：</strong>在浏览器中使用Servlet更新数据时，页面每次都要刷新，用户体验十分不好，随决定学习Ajax来解决这个问题。<br><a id="more"></a></p>
<h2 id="1-什么是Ajax"><a href="#1-什么是Ajax" class="headerlink" title="1.什么是Ajax"></a>1.什么是Ajax</h2><p>AJAX（Asynchronous Javascript And XML）翻译成中文就是“异步Javascript和XML”。即使用Javascript语言与服务器进行异步交互，传输的数据为XML（当然，传输的数据不只是XML）。<br>AJAX还有一个最大的特点就是，当服务器响应时，不用刷新整个浏览器页面，而是可以局部刷新。这一特点给用户的感受是在不知不觉中完成请求和响应过程。<br>它包括：</p>
<ul>
<li>与服务器的异步交互</li>
<li>浏览器的局部刷新<h2 id="2-Ajax工作原理"><a href="#2-Ajax工作原理" class="headerlink" title="2.Ajax工作原理"></a>2.Ajax工作原理</h2>传统web通信<br><img src="http://static.zybuluo.com/danerlt/ms428mcei02q8b4vg37efh9o/image_1b1k4n3r81f9iecbdhl1m4r10s39.png" alt="image_1b1k4n3r81f9iecbdhl1m4r10s39.png-116.3kB"><br>Ajax工作原理<br><img src="http://static.zybuluo.com/danerlt/2ow6jrb4xjwov0zx84boaob2/image_1b1k4np1c74h8m0tir38n2jim.png" alt="image_1b1k4np1c74h8m0tir38n2jim.png-124.2kB"><br>由图中可以看出传统的web通信中，客户端发送一个HTTP请求道服务器，服务器在返回一个新的页面给客户端。而Ajax在返回时返回了多个响应。</li>
</ul>
<h2 id="3-原生JS代码"><a href="#3-原生JS代码" class="headerlink" title="3.原生JS代码"></a>3.原生JS代码</h2><p>其中<code>/ajaxdemo1/Bservlet</code>,就是获取数据的url。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">function createXMLHttpRequest() &#123;</div><div class="line">				try &#123;</div><div class="line">					return new XMLHttpRequest();</div><div class="line">				&#125; catch(e) &#123;</div><div class="line">					try &#123;</div><div class="line">						return new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);</div><div class="line">					&#125; catch(e) &#123;</div><div class="line">						return new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			function check() &#123;</div><div class="line">                var xmlHttp = createXMLHttpRequest();</div><div class="line">                xmlHttp.onreadystatechange = function() &#123;</div><div class="line">                    if(xmlHttp.readyState == 4 &amp;&amp; xmlHttp.status == 200) &#123;</div><div class="line">                        if(xmlHttp.responseText == &quot;true&quot;) &#123;</div><div class="line">                            document.getElementById(&quot;error&quot;).innerHTML = &quot;用户名已被注册！&quot;;</div><div class="line">                        &#125; else &#123;</div><div class="line">                             document.getElementById(&quot;error&quot;).innerHTML = &quot;&quot;;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;;</div><div class="line">                xmlHttp.open(&quot;POST&quot;, &quot;/ajaxdemo1/BServlet&quot;, true);</div><div class="line">                xmlHttp.setRequestHeader(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</div><div class="line">                var username = document.getElementById(&quot;username&quot;).value;</div><div class="line">                xmlHttp.send(&quot;username=&quot; + username);</div><div class="line">			&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/a47120678b86#&quot;&gt;简书橙小张&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;背景描述：&lt;/strong&gt;在浏览器中使用Servlet更新数据时，页面每次都要刷新，用户体验十分不好，随决定学习Ajax来解决这个问题。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="ajax" scheme="http://litao.work/tags/ajax/"/>
    
      <category term="javaweb" scheme="http://litao.work/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>Python安装配置</title>
    <link href="http://litao.work/2017/08/30/Python%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://litao.work/2017/08/30/Python安装配置/</id>
    <published>2017-08-30T03:56:12.000Z</published>
    <updated>2017-08-30T07:13:46.064Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Python<a href="http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png" target="_blank" rel="external">1</a>  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议<a href="http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png" target="_blank" rel="external">2</a>  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。</p>
</blockquote>
<a id="more"></a>
<h2 id="Python下载"><a href="#Python下载" class="headerlink" title="Python下载"></a>Python下载</h2><p>我们选择安装的Python版本为Python3,首先打开Python的官方网站:<a href="https://www.python.org/" target="_blank" rel="external">https://www.python.org/</a>,就像下面这个样子,鼠标移到<code>Downloads</code>点击<code>Windows</code>:<br><img src="http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png" alt="image_1boodesql175n1mi81r3run6eigm.png-263.6kB"><br>选择<code>3.5.4</code>的版本,下载到本机.<br><img src="http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png" alt="image_1boodncih1ov67131ptsi7i2hb13.png-141kB"></p>
<h2 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h2><p>安装的时候勾选<code>install for all user</code>,高级选项里面全选就行了.然后点击install.<br><img src="http://static.zybuluo.com/danerlt/dgwmbhtm6enhbs3lykkbirem/image_1boojdladhom1jp31r851dcg198k21.png" alt="image_1boojdladhom1jp31r851dcg198k21.png-236.4kB"><br>输入<code>python -V</code>查看版本,输出Python版本说明配置好了.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\litao_sx&gt;python -V</div><div class="line">Python 3.5.4</div></pre></td></tr></table></figure></p>
<h2 id="Python配置"><a href="#Python配置" class="headerlink" title="Python配置"></a>Python配置</h2><h3 id="将PYTHON3-HOME添加到PATH中"><a href="#将PYTHON3-HOME添加到PATH中" class="headerlink" title="将PYTHON3_HOME添加到PATH中"></a>将<code>PYTHON3_HOME</code>添加到<code>PATH</code>中</h3><p>点击<code>我的电脑</code>,右键点击<code>属性</code>,然后点击<code>高级系统设置</code>,然后点击环境变量.<br><img src="http://static.zybuluo.com/danerlt/51d1e26akbq9tgz2d8jp57n0/image_1boojkqnctc71k1erk718a86qo2e.png" alt="image_1boojkqnctc71k1erk718a86qo2e.png-90.9kB"><br><img src="http://static.zybuluo.com/danerlt/6zzhnfwjc1242sezg8edam0p/image_1boojl5r8105511gsqrc1lac1kl22r.png" alt="image_1boojl5r8105511gsqrc1lac1kl22r.png-35kB"><br>新建<code>PYTHON3_HOME</code>环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PYTHON3_HOME</div><div class="line">D:\Program Files\Python35</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/4c8a2kf62oygnkryw4y17lje/image_1boojoa02145n1c2715lvtnv18b38.png" alt="image_1boojoa02145n1c2715lvtnv18b38.png-54.5kB"><br>将环境变量添加到PATH中.将下面的内容添加到PATH的最前面.<br>PS: <code>%PYTHON3_HOME%</code>表示取<code>PYTHON3_HOME</code>环境变量的值,<code>;</code>用来分隔环境变量,一定是英文半角下的分号,写错会运行失败.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%PYTHON3_HOME%;%PYTHON3_HOME%\Scripts;</div></pre></td></tr></table></figure></p>
<h3 id="Python-HelloWorld"><a href="#Python-HelloWorld" class="headerlink" title="Python HelloWorld"></a>Python HelloWorld</h3><p>在命令提示符中输入<code>python</code>,进入交互模式,输入下面代码,Hello World就出来了.输入<code>quit()</code>或者按下<code>Ctrl+Z</code>退出交互模式.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(&apos;Hello World&apos;)</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/b260c7he4tnxcevjzi6o1pq9/image_1book78ammd518pucadqfukp242.png" alt="image_1book78ammd518pucadqfukp242.png-113.6kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Python&lt;a href=&quot;http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png&quot;&gt;1&lt;/a&gt;  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。&lt;br&gt;Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议&lt;a href=&quot;http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png&quot;&gt;2&lt;/a&gt;  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="python" scheme="http://litao.work/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Git服务器配置</title>
    <link href="http://litao.work/2017/08/29/Git%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://litao.work/2017/08/29/Git服务器配置/</id>
    <published>2017-08-29T09:43:52.000Z</published>
    <updated>2017-08-29T09:50:31.533Z</updated>
    
    <content type="html"><![CDATA[<p>Github 公开的项目是免费的，但是如果你不想让其他人看到你的项目就需要收费。<br>这时我们就需要自己搭建一台Git服务器作为私有仓库使用。<br>接下来我们将以 Centos 为例搭建 Git 服务器。服务器版本：Centos7.0<br><a id="more"></a></p>
<blockquote>
<p>参考廖雪峰<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000" target="_blank" rel="external">搭建Git服务器</a></p>
</blockquote>
<h2 id="１-建立git用户"><a href="#１-建立git用户" class="headerlink" title="１.建立git用户"></a>１.建立git用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo useradd -m git</div></pre></td></tr></table></figure>
<h2 id="2-创建证书登录"><a href="#2-创建证书登录" class="headerlink" title="2.创建证书登录"></a>2.创建证书登录</h2><p>在git用户文件夹中，创建.ssh文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir .ssh</div></pre></td></tr></table></figure></p>
<p>在<code>.ssh</code>中<code>touch authorized_keys</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>收集所有需要登录的用户的公钥，就是他们自己的<code>id_rsa.pub</code>文件，把所有公钥导入到<code>/home/git/.ssh/authorized_keys</code>文件里，一行一个。<br>可以使用<code>scp</code>命令将本地文件上传到远程服务器上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 将服务器IP地址换成你自己的</div><div class="line">scp .ssh/id_rsa.pub root@IP地址:/home/git/.ssh</div></pre></td></tr></table></figure></p>
<p>然后使用一下命令追加到<code>authorized_keys</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat id_rsa.pub &gt;&gt; authorized_keys</div></pre></td></tr></table></figure></p>
<p>PS：客户端配置git常用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git config --global user.name yourname</div><div class="line">git config --blabal user.email your_email@example.com</div><div class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure></p>
<h2 id="3-禁用shell登录"><a href="#3-禁用shell登录" class="headerlink" title="3.禁用shell登录"></a>3.禁用shell登录</h2><p>出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/bin/bash</div></pre></td></tr></table></figure></p>
<p>改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</div></pre></td></tr></table></figure></p>
<p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p>
<h2 id="5-将服务器IP地址配置在host文件中"><a href="#5-将服务器IP地址配置在host文件中" class="headerlink" title="5.将服务器IP地址配置在host文件中"></a>5.将服务器IP地址配置在<code>host</code>文件中</h2><p>用编辑器编辑<code>/etc/hosts</code>文件，将IP 主机名添加进去。例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">123.123.123.123 server</div></pre></td></tr></table></figure></p>
<h2 id="4-初始化一个git仓库"><a href="#4-初始化一个git仓库" class="headerlink" title="4.初始化一个git仓库"></a>4.初始化一个git仓库</h2><p>先选定一个目录作为Git仓库，假定是<code>/opt</code>，在<code>/opt</code>目录下输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo git init --bare test.git</div></pre></td></tr></table></figure></p>
<p>看到“初始化空的 Git 版本库于 /opt/test.git/”提示说明git仓库创建成功，git会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo chown -R git:git test.git</div></pre></td></tr></table></figure></p>
<h2 id="5-克隆仓库"><a href="#5-克隆仓库" class="headerlink" title="5.克隆仓库"></a>5.克隆仓库</h2><p>server就是hosts文件里面配置与服务器IP对应的主机名，<code>server：</code>后面跟的就是git服务器上的仓库地址绝对路径。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> ~/Desktop  git clone git@server:/opt/test.git</div><div class="line">正克隆到 &apos;test&apos;...</div><div class="line">The authenticity of host &apos;server (123.207.14.144)&apos; can&apos;t be established.</div><div class="line">ECDSA key fingerprint is SHA256:yxZ7puk5qP4H1+ikqIqMcc51j0Y7hm2U8RjlynCZM30.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;server&apos; (ECDSA) to the list of known hosts.</div><div class="line">warning: 您似乎克隆了一个空仓库。</div><div class="line"> ~/Desktop </div></pre></td></tr></table></figure></p>
<h2 id="6-在客户端提交修改"><a href="#6-在客户端提交修改" class="headerlink" title="6.在客户端提交修改"></a>6.在客户端提交修改</h2><p>然后在客户机上新建一个文件test.txt，然后提交，测试提交是否能够成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"> ~/Desktop/test   master  vi test.txt</div><div class="line"> ~/Desktop/test   master  ls</div><div class="line">test.txt</div><div class="line"> ~/Desktop/test   master  git add test.txt</div><div class="line"> ~/Desktop/test   master ✚  git log</div><div class="line">fatal: 您的当前分支 &apos;master&apos; 尚无任何提交</div><div class="line"> ✘  ~/Desktop/test   master ✚  git commit -m &quot;add test.txt&quot; </div><div class="line">[master（根提交） f9c522e] add test.txt</div><div class="line"> 1 file changed, 1 insertion(+)</div><div class="line"> create mode 100644 test.txt</div><div class="line"> ~/Desktop/test   master  git  log</div><div class="line"> commit f9c522ee0e603d715b6e276e077a2e2bc04dac4a</div><div class="line">Author: Lt-grint &lt;1598552894@qq.com&gt;</div><div class="line">Date:   Mon Aug 28 12:07:19 2017 +0800</div><div class="line"></div><div class="line">    add test.txt</div><div class="line">~/Desktop/test   master  git push</div><div class="line">对象计数中: 3, 完成.</div><div class="line">写入对象中: 100% (3/3), 236 bytes | 0 bytes/s, 完成.</div><div class="line">Total 3 (delta 0), reused 0 (delta 0)</div><div class="line">To server:/opt/test.git</div><div class="line"> * [new branch]      master -&gt; master</div></pre></td></tr></table></figure></p>
<h2 id="7-重新clone一次查看是否提交成功"><a href="#7-重新clone一次查看是否提交成功" class="headerlink" title="7.重新clone一次查看是否提交成功"></a>7.重新clone一次查看是否提交成功</h2><p>先在服务器上查看，提交时成功了的。<br><img src="http://static.zybuluo.com/danerlt/zgq005r4xt6mad0ou7xlhfaa/image_1bojgtg029oq1ug1st1g1t13t19.png" alt="image_1bojgtg029oq1ug1st1g1t13t19.png-131.4kB"><br>重新克隆一次，可以看出之前的提交已经成功了，到此git服务器配置已经完成了。接下来就可以愉快的push，pull了。<br> <img src="http://static.zybuluo.com/danerlt/qccrnl81spv7fpxq097xqckn/image_1bojh4i38v5ei0m7u1vm31kk5m.png" alt="image_1bojh4i38v5ei0m7u1vm31kk5m.png-115.5kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 公开的项目是免费的，但是如果你不想让其他人看到你的项目就需要收费。&lt;br&gt;这时我们就需要自己搭建一台Git服务器作为私有仓库使用。&lt;br&gt;接下来我们将以 Centos 为例搭建 Git 服务器。服务器版本：Centos7.0&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://litao.work/categories/linux/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>查找二维数组</title>
    <link href="http://litao.work/2017/06/29/%E6%9F%A5%E6%89%BE%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    <id>http://litao.work/2017/06/29/查找二维数组/</id>
    <published>2017-06-29T01:55:23.000Z</published>
    <updated>2017-08-30T07:15:03.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在一个二维数组中,每一行都按照从到右递增的顺序,每一列都按照从上到下递增的顺序排序.请完成一个函数,输入这样的一个二维数组和一个数组中,是否含有该整数.详情请点击<a href="https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;tqId=11154&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="external">这里</a>.(题目来源牛客网剑指offer).<br><a id="more"></a></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//二维数组</div><div class="line">&#123;1, 2, 8, 9&#125;,</div><div class="line">&#123;2, 4, 9, 12&#125;,</div><div class="line">&#123;4, 7, 10, 13&#125;,</div><div class="line">6, 8, 11, 15&#125;</div><div class="line">//目标数字</div><div class="line">7</div></pre></td></tr></table></figure>
<h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">true</div></pre></td></tr></table></figure>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p> number从左下角开始,又三种可能的情况:<br>1.number == target,这种情况直接返回true;<br>2.number &lt; target,那么target的范围不可能number的这一列,<br>就在number这一列的右边去找,然后将number的值设为number右边的数,再次比较和target比较<br>3.number &gt; target,那么target的范围不可能number的这一行,<br>就在number这一行的上边去找,然后将number的值设为number上边的数,再次比较和target比较</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public boolean hasNumber(int[][] arr, int target) &#123;</div><div class="line">        boolean found = false;</div><div class="line">        int rows = arr.length;</div><div class="line">        int columns = arr[0].length;</div><div class="line">        if (arr != null &amp;&amp; rows &gt; 0 &amp;&amp; columns &gt; 0) &#123;</div><div class="line">            int row = rows - 1;</div><div class="line">            int column = 0;</div><div class="line"></div><div class="line">            while (row &gt;= 0 &amp;&amp; column &lt; columns) &#123;</div><div class="line">                int number = arr[row][column];//起始位置为左下角的值.</div><div class="line">                if (number == target) &#123;</div><div class="line">                    found = true;</div><div class="line">                    break;</div><div class="line">                &#125; else if (number &lt; target) &#123;</div><div class="line">                    ++column;</div><div class="line">                &#125; else &#123;</div><div class="line">                    --row;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return found;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="代码详细源码"><a href="#代码详细源码" class="headerlink" title="代码详细源码"></a>代码详细源码</h2><p>也可在<a href="https://github.com/Lt-grint/offer-java/blob/master/src/offer/Example03.java" target="_blank" rel="external">这里</a>查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">package offer;</div><div class="line"></div><div class="line"></div><div class="line">import org.junit.Test;</div><div class="line"></div><div class="line">import static org.junit.Assert.*;</div><div class="line"></div><div class="line">/**</div><div class="line"> * @describute 題目描述：</div><div class="line"> * 在一个二维数组中,每一行都按照从到右递增的顺序,</div><div class="line"> * 每一列都按照从上到下递增的顺序排序.请完成一个函数,输入</div><div class="line"> * 这样的一个二维数组和一个数组中,是否含有该整数.</div><div class="line"> * &lt;p&gt;</div><div class="line"> * 解题思路:</div><div class="line"> * number从左下角开始,又三种可能的情况:</div><div class="line"> * 1.number == target,这种情况直接返回true;</div><div class="line"> * 2.number &lt; target,那么target的范围不可能number的这一列,</div><div class="line"> * 就在number这一列的右边去找,然后将number的值设为number右边的数,再次比较和target比较</div><div class="line"> * 3.number &gt; target,那么target的范围不可能number的这一行,</div><div class="line"> * 就在number这一行的上边去找,然后将number的值设为number上边的数,再次比较和target比较</div><div class="line"> * Created by danerlt on 17-6-28.</div><div class="line"> */</div><div class="line">public class Example03 &#123;</div><div class="line">    public boolean hasNumber(int[][] arr, int target) &#123;</div><div class="line">        boolean found = false;</div><div class="line">        int rows = arr.length;</div><div class="line">        int columns = arr[0].length;</div><div class="line">        if (arr != null &amp;&amp; rows &gt; 0 &amp;&amp; columns &gt; 0) &#123;</div><div class="line">            int row = rows - 1;</div><div class="line">            int column = 0;</div><div class="line"></div><div class="line">            while (row &gt;= 0 &amp;&amp; column &lt; columns) &#123;</div><div class="line">                int number = arr[row][column];//起始位置为左下角的值.</div><div class="line">                if (number == target) &#123;</div><div class="line">                    found = true;</div><div class="line">                    break;</div><div class="line">                &#125; else if (number &lt; target) &#123;</div><div class="line">                    ++column;</div><div class="line">                &#125; else &#123;</div><div class="line">                    --row;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return found;</div><div class="line">    &#125;</div><div class="line">    @Test</div><div class="line">    public void testHasNumber () &#123;</div><div class="line">        int[][] arr = new int[][]&#123;</div><div class="line">                &#123;1, 2, 8, 9&#125;,</div><div class="line">                &#123;2, 4, 9, 12&#125;,</div><div class="line">                &#123;4, 7, 10, 13&#125;,</div><div class="line">                &#123;6, 8, 11, 15&#125;</div><div class="line">        &#125;;</div><div class="line">        assertTrue(hasNumber(arr, 15));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Test</div><div class="line">    public void testHasNotNumber () &#123;</div><div class="line">        int[][] arr = new int[][]&#123;</div><div class="line">                &#123;1, 2, 8, 9&#125;,</div><div class="line">                &#123;2, 4, 9, 12&#125;,</div><div class="line">                &#123;4, 7, 10, 13&#125;,</div><div class="line">                &#123;6, 8, 11, 15&#125;</div><div class="line">        &#125;;</div><div class="line">        assertFalse(hasNumber(arr, 5));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;在一个二维数组中,每一行都按照从到右递增的顺序,每一列都按照从上到下递增的顺序排序.请完成一个函数,输入这样的一个二维数组和一个数组中,是否含有该整数.详情请点击&lt;a href=&quot;https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;amp;tqId=11154&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=/ta/coding-interviews&amp;amp;qru=/ta/coding-interviews/question-ranking&quot;&gt;这里&lt;/a&gt;.(题目来源牛客网剑指offer).&lt;br&gt;
    
    </summary>
    
      <category term="刷题" scheme="http://litao.work/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="http://litao.work/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>IDEA使用Maven构建Java Web项目</title>
    <link href="http://litao.work/2017/05/12/IDEA%E4%BD%BF%E7%94%A8Maven%E6%9E%84%E5%BB%BAJava-Web%E9%A1%B9%E7%9B%AE/"/>
    <id>http://litao.work/2017/05/12/IDEA使用Maven构建Java-Web项目/</id>
    <published>2017-05-12T04:35:30.000Z</published>
    <updated>2017-08-30T07:15:28.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-打开IDEA"><a href="#1-打开IDEA" class="headerlink" title="1.打开IDEA"></a>1.打开IDEA</h2><p>点击<code>create new project</code>,在左侧选择Maven,然后勾选<code>create from archetype</code>,然后点击<code>maven-archetype-webapp</code>,如图1,2,3,然后点击next.</p>
<p><img src="http://static.zybuluo.com/danerlt/o4iy8fiqsdi6y4x330g72mys/image_1bfta2fdv2ac1q1u1t0hl4unv9.png" alt="create new project"><br><a id="more"></a><br><img src="http://static.zybuluo.com/danerlt/han82isrlxo262ai7n91wg6w/image_1bftab91r43c1ijl6a1iju1f6813.png" alt="image_1bftab91r43c1ijl6a1iju1f6813.png-96kB"></p>
<h2 id="2-填写maven项目的groupId-artifactId-version"><a href="#2-填写maven项目的groupId-artifactId-version" class="headerlink" title="2.填写maven项目的groupId,artifactId,version."></a>2.填写maven项目的groupId,artifactId,version.</h2><p>其中groupId一般是公司域名的反写,artifactId一般是项目名-模块名,version表示版本,snapshot是快照的意思.<br><img src="http://static.zybuluo.com/danerlt/j90u3jd62iu6wldwuinxjn8p/image_1bftadg19e51bvj37617pr1lqj1g.png" alt="image_1bftadg19e51bvj37617pr1lqj1g.png-27.5kB"></p>
<h2 id="3-配置maven"><a href="#3-配置maven" class="headerlink" title="3.配置maven"></a>3.配置maven</h2><p>1表示的是maven的安装目录,2表示的是maven的setting文件,在maven安装目录下的<code>conf</code>目录下,3表示的是maven的仓库地址,默认为<code>C:\Users\username</code>目录下的<code>.m2</code>目录下.<br><img src="http://static.zybuluo.com/danerlt/c306srof2nn4gypkpxfh7nip/image_1bftakrnm1vhu1evv3findl1hcr1t.png" alt="image_1bftakrnm1vhu1evv3findl1hcr1t.png-42.9kB"></p>
<h2 id="4-配置project"><a href="#4-配置project" class="headerlink" title="4.配置project"></a>4.配置project</h2><p>输入项目名,项目在本地的路径然后点击finsh就ok了.<br><img src="http://static.zybuluo.com/danerlt/n90zqprs8rkmxcn7rrxgs3h3/image_1bftbrt6n1vhp9uh11tu168612fb2a.png" alt="image_1bftbrt6n1vhp9uh11tu168612fb2a.png-32.4kB"></p>
<h2 id="5-maven自动导包"><a href="#5-maven自动导包" class="headerlink" title="5.maven自动导包"></a>5.maven自动导包</h2><p><img src="http://static.zybuluo.com/danerlt/0tkdho13yikauadw5lrwakwo/image_1bftc2o7fv3l1rarhu41tfid182n.png" alt="image_1bftc2o7fv3l1rarhu41tfid182n.png-138.9kB"></p>
<h2 id="6-新建java目录和test目录"><a href="#6-新建java目录和test目录" class="headerlink" title="6.新建java目录和test目录"></a>6.新建java目录和test目录</h2><p>默认情况下<code>src</code>目录下没有<code>java</code>目录和<code>test</code>目录,如有必要还需要新建<code>resours</code>目录我们需要手动建立,建好之后还需要配置一下.按下<code>Ctrl+Shift+Alt+S</code>快捷键或者点击<code>File-&gt;Project Structure</code>.<br><img src="http://static.zybuluo.com/danerlt/2p9ecqp1lyx6h7byyw9bkuoq/image_1bftg00ngivi1mj21dnv1ngj5ng6p.png" alt="image_1bftg00ngivi1mj21dnv1ngj5ng6p.png-16.7kB"><br>点击Moudle,如图1,然后点击Sources,选中目录,然后点击对应的3,4,5,6.<br><code>java</code>目录对应<code>Sources</code>,<code>test</code>目录对应<code>Tests</code>,<code>java</code>目录下的<code>resources</code>对应<code>Resources</code>,<code>test</code>目录下的<code>resources</code>对应<code>Test Resources</code>.<br><img src="http://static.zybuluo.com/danerlt/yhzk54x873mqq2mp0vnbwx7q/image_1bftci552917rjp15vg1s4v453u.png" alt="image_1bftci552917rjp15vg1s4v453u.png-85.3kB"></p>
<h2 id="7-配置tomcat"><a href="#7-配置tomcat" class="headerlink" title="7.配置tomcat"></a>7.配置tomcat</h2><p>先选择tomcat的版本,<br><img src="http://static.zybuluo.com/danerlt/rwm5m7v3amhq5fhg7ju3pmqx/image_1bftec89sjh3cdoa11mgl1l1l4b.png" alt="image_1bftec89sjh3cdoa11mgl1l1l4b.png-71.6kB"><br>然后点击deployment,点击加号,选择artifacts.选择后缀为exploded,<br><img src="http://static.zybuluo.com/danerlt/h8ejz2kciq0ckx3b0wjqmebf/image_1bftef11j11oq1d591uu8m0h1gki4o.png" alt="image_1bftef11j11oq1d591uu8m0h1gki4o.png-17.1kB"><br>然后点击编辑,这里可以修改发布的位置,可以选择tomcat的webapp目录<br><img src="http://static.zybuluo.com/danerlt/27q917n4cshxjoq0uw6zo2h8/image_1bftek8vdnu5e811nm6cpgmva55.png" alt="image_1bftek8vdnu5e811nm6cpgmva55.png-67.5kB"><br>然后将箭头指的位置改为<code>Updata classes and resources</code><br><img src="http://static.zybuluo.com/danerlt/7lq95th7pchdklaksd4h2snx/image_1bften1vv1pa21sl7sq21l8t1pko5i.png" alt="image_1bften1vv1pa21sl7sq21l8t1pko5i.png-70.4kB"></p>
<h2 id="8-测试是否配置成功"><a href="#8-测试是否配置成功" class="headerlink" title="8.测试是否配置成功"></a>8.测试是否配置成功</h2><p>在webapp目录下的index.jsp添加一些内容,点击debug,浏览器自动打开如下就可以了<br><img src="http://static.zybuluo.com/danerlt/ar1v983yq6y7h6zfc4hxpgmc/image_1bftetdeg1kb2g1ser31a1m6sa5v.png" alt="image_1bftetdeg1kb2g1ser31a1m6sa5v.png-82kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-打开IDEA&quot;&gt;&lt;a href=&quot;#1-打开IDEA&quot; class=&quot;headerlink&quot; title=&quot;1.打开IDEA&quot;&gt;&lt;/a&gt;1.打开IDEA&lt;/h2&gt;&lt;p&gt;点击&lt;code&gt;create new project&lt;/code&gt;,在左侧选择Maven,然后勾选&lt;code&gt;create from archetype&lt;/code&gt;,然后点击&lt;code&gt;maven-archetype-webapp&lt;/code&gt;,如图1,2,3,然后点击next.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/danerlt/o4iy8fiqsdi6y4x330g72mys/image_1bfta2fdv2ac1q1u1t0hl4unv9.png&quot; alt=&quot;create new project&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="javaweb" scheme="http://litao.work/tags/javaweb/"/>
    
      <category term="idea" scheme="http://litao.work/tags/idea/"/>
    
      <category term="maven" scheme="http://litao.work/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Centos安装oracle 11g(二)</title>
    <link href="http://litao.work/2017/03/30/centos%E5%AE%89%E8%A3%85oracle-11g-%E4%BA%8C/"/>
    <id>http://litao.work/2017/03/30/centos安装oracle-11g-二/</id>
    <published>2017-03-29T17:06:08.000Z</published>
    <updated>2017-08-30T07:28:00.863Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装Oracle 11g(一)</title>
    <link href="http://litao.work/2017/03/30/centos%E5%AE%89%E8%A3%85Oracle-11g-%E4%B8%80/"/>
    <id>http://litao.work/2017/03/30/centos安装Oracle-11g-一/</id>
    <published>2017-03-29T16:57:29.000Z</published>
    <updated>2017-08-30T07:26:15.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>写这个文档一是为了记录下自己安装Oracle和配置的一些步骤，以备以后查看，二是在安装文档时找不到一般比较好的中文版介绍，安装时参考的<a href="https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1" target="_blank" rel="external">https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1</a>,文档只要安装时的命令，没有截图，我加上了大部分命令运行的截图。</p>
<p><strong>注意:本文主要讲解到图形化安装前的配置,因为Oracle安装需要使用256位的图像显示,所以图形化界面的安装请戳<a href="https://www.baidu.com" target="_blank" rel="external">这里</a>.</strong><br><a id="more"></a><br>在CentOS7 64位上安装Oracle 11g数据库，首先验证系统<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hostnamectl</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/0iff1p5gakqmxr0j0uvy6zh1/image_1bcamf2a6uig10rt5ea1f7ojnr26.png" alt="image_1bcamf2a6uig10rt5ea1f7ojnr26.png-39.4kB"></p>
<h2 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h2><p>当操作系统被成功安装后，要记得验证和登记在你的DNS主机名。另外加上你的主机名或<code>IP</code>和<code>/etc/hosts</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/hostname</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/lanvwz6s4rdcggqeaihkydla/image_1bcamt09dujec8bdj994ssg033.png" alt="image_1bcamt09dujec8bdj994ssg033.png-9.8kB"><br>离开SELinux执行模式以及防火墙启用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sestatus</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/m8l19svgazt5hhoi6nhtcnbq/image_1bcan0euiigdqa3189914kimc03g.png" alt="image_1bcan0euiigdqa3189914kimc03g.png-25.2kB"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --state</div></pre></td></tr></table></figure></p>
<p>升级CentOS系统上过时的包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum update -y</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/pyhc2srz7jw8s68aeimtqc2f/image_1bcaso72qimdrjj1uvt1mc5o76cc.png" alt="image_1bcaso72qimdrjj1uvt1mc5o76cc.png-42.9kB"><br>下载linux x86-64版本的Oracle 11g数据库</p>
<blockquote>
<p><a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html" target="_blank" rel="external">http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html</a></p>
<h2 id="安装前配置-1"><a href="#安装前配置-1" class="headerlink" title="安装前配置"></a>安装前配置</h2><p>创建用户组oinstall和dba并且创建用户oracle，将其加入到oinstall组中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">groupadd oinstall</div><div class="line">groupadd dba</div><div class="line">useradd -g oinstall -G dba oracle</div><div class="line">passwd oracle</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://static.zybuluo.com/danerlt/z9t9nit8xh84sstvvg1504b6/image_1bcdd0m9ancr1dtl1jfjqb1j659.png" alt="创建用户组和用户"><br><img src="http://static.zybuluo.com/danerlt/npj6ejb04a3vld5opgr8hmy4/image_1bcdd1epq8qp1aih197k3h0hcg1m.png" alt="更改Oracle密码"><br>添加一些内核参数到<code>/etc/sysctl.conf</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">fs.aio-max-nr = 1048576</div><div class="line">fs.file-max = 6815744</div><div class="line">kernel.shmall = 2097152</div><div class="line">kernel.shmmax = 1987162112</div><div class="line">kernel.shmmni = 4096</div><div class="line">kernel.sem = 250 32000 100 128</div><div class="line">net.ipv4.ip_local_port_range = 9000 65500</div><div class="line">net.core.rmem_default = 262144</div><div class="line">net.core.rmem_max = 4194304</div><div class="line">net.core.wmem_default = 262144</div><div class="line">net.core.wmem_max = 1048586</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/aal3l5y112m2p2afr44uj4xe/image_1bcddb1i9okkhjpu8t2up13kf23.png" alt="修改sysctl.conf文件"><br>让刚刚设置的参数立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/w579cwcm5tjd337fh1q2qsqt/image_1bcddgk00q4bpqv1i021ntpd7i2g.png" alt="sysctl -p"><br>查看所有的参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -a</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/avp96h10jkaa57k6h90c3g6j/image_1bcddhia5hmv16rgvcu17olesl2t.png" alt="sysctl -a"><br>设置oracle用户的上限在<code>/etc/security/limits.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">oracle soft nproc 2047</div><div class="line">oracle hard nproc 16384</div><div class="line">oracle soft nofile 1024</div><div class="line">oracle hard nofile 65536</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/5kc8zluwk5dezzo06cw7ku6r/image_1bcddoaca11aa17ur1v9i1qf37cv3a.png" alt="设置oracle用户上限"><br>首先用ftp将压缩包传到linux上，然后解压oracle压缩包到<code>/oraclepackage</code>目录下,这里解压要等一会，可以去喝杯咖啡再回来看解压好了没有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y zip unzip</div><div class="line">ls</div><div class="line">unzip linux.x64_11gR2_database_1of2.zip -d /oraclepackage</div><div class="line">unzip linux.x64_11gR2_database_2of2.zip -d /oraclepackage</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/mjmjwhykdo7mixifyb7k9aya/image_1bcdec53m1p7b4hsv631smd1iml3n.png" alt="安装unzip"><br><img src="http://static.zybuluo.com/danerlt/hpugo055s2kuyayutbglttrt/image_1bcdeddi5gvc1ruj5u61ors1t1v44.png" alt="查看压缩包"><br><img src="http://static.zybuluo.com/danerlt/brz9qr3elt2im6stdopqwml8/image_1bcdemdrb1u9i9vr53911gt1mk04h.png" alt="解压压缩包1"><br><img src="http://static.zybuluo.com/danerlt/vk1gh87xlxy9nvzidulnif5e/image_1bcdf3kqov8favo1lnnel8nqj4u.png" alt="解压压缩包2"><br>这里解压好了要修改<code>/oraclepackage</code>目录的权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R oracle:oinstall /oraclepackage/</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/0c7uiqh7rh6ks33kjk3imago/image_1bcdfbkmctl97tmh91vea1a065b.png" alt="修改权限"><br>新建一个目录<code>u01</code>安装oracle,一个目录<code>u02</code>存放数据文件,然后修改拥有者和权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mkdir /u01</div><div class="line">mkdir /u02</div><div class="line">chown -R oracle:oinstall /u01</div><div class="line">chown -R oracle:oinstall /u02</div><div class="line">chmod -R 775 /u01</div><div class="line">chmod -R 775 /u02</div><div class="line">chmod g+s /u01</div><div class="line">chmod g+s /u02</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/y3lxx0jilops2i5piatycqhj/image_1bcdfff8l32rs5ctad1mk21lke5o.png" alt="新建目录并赋权"><br>安装需要的软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y binutils.x86_64 compat-libcap1.x86_64 gcc.x86_64 gcc-c++.x86_64 glibc.i686 glibc.x86_64 \</div><div class="line">glibc-devel.i686 glibc-devel.x86_64 ksh compat-libstdc++-33 libaio.i686 libaio.x86_64 libaio-devel.i686 libaio-devel.x86_64 \</div><div class="line">libgcc.i686 libgcc.x86_64 libstdc++.i686 libstdc++.x86_64 libstdc++-devel.i686 libstdc++-devel.x86_64 libXi.i686 libXi.x86_64 \</div><div class="line">libXtst.i686 libXtst.x86_64 make.x86_64 sysstat.x86_64</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/eaf80yihfuwnc8fu8ta27mer/image_1bcdfk3iq41e1q571r53100ahuk65.png" alt="安装软件包1"><br><img src="http://static.zybuluo.com/danerlt/0drqslttied7ijdl1qu487d2/image_1bcdfl6ev182t12s3dmleim19096i.png" alt="安装软件包2"><br>恭喜你,完成这一步就可以进行图形化的界面安装了,具体可以查看<a href="https://litao.work/">centos 安装Oracle 11(二)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;写这个文档一是为了记录下自己安装Oracle和配置的一些步骤，以备以后查看，二是在安装文档时找不到一般比较好的中文版介绍，安装时参考的&lt;a href=&quot;https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1&quot;&gt;https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1&lt;/a&gt;,文档只要安装时的命令，没有截图，我加上了大部分命令运行的截图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意:本文主要讲解到图形化安装前的配置,因为Oracle安装需要使用256位的图像显示,所以图形化界面的安装请戳&lt;a href=&quot;https://www.baidu.com&quot;&gt;这里&lt;/a&gt;.&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装.NET Core</title>
    <link href="http://litao.work/2017/03/27/centos%E5%AE%89%E8%A3%85-NET-Core/"/>
    <id>http://litao.work/2017/03/27/centos安装-NET-Core/</id>
    <published>2017-03-27T04:32:18.000Z</published>
    <updated>2017-08-30T07:27:49.960Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>.NET Core 是.NET Framework的新一代版本，是微软开发的第一个官方版本，具有跨平台 (Windows、Mac OSX、Linux) 能力的应用程序开发框架 (Application Framework)，未来也将会支持 FreeBSD 与 Alpine 平台，也是微软在一开始发展时就开源的软件平台<a href="http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png" target="_blank" rel="external">1</a>  ，它经常也会拿来和现有的开源 .NET 平台 Mono 比较。<br>由于 .NET Core 的开发目标是跨平台的 .NET 平台，因此 .NET Core 会包含 .NET Framework 的类库，但与 .NET Framework 不同的是 .NET Core 采用包化 (Packages) 的管理方式，应用程序只需要获取需要的组件即可，与 .NET Framework 大包式安装的作法截然不同，同时各包亦有独立的版本线 (Version line)，不再硬性要求应用程序跟随主线版本。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装-net-core"><a href="#安装-net-core" class="headerlink" title="安装.net core"></a>安装.net core</h2><h3 id="安装依赖的库文件"><a href="#安装依赖的库文件" class="headerlink" title="安装依赖的库文件"></a>安装依赖的库文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install -y libunwind libicu</div></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png" alt="image_1bc6vmvlaetorpeqhhr0hu7i9.png-23.3kB"></p>
<h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><p>将压缩包下载的本地或者通过ftp上传到Linux上,我这里是用ftp上传的，所以名字不一样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?linkid=843449</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/cld14rbsk7p29apk06jo8dks/image_1bc6vq96b1o1afe61r5virt9a613.png" alt="image_1bc6vq96b1o1afe61r5virt9a613.png-13.3kB"></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>将压缩包解压到<code>/opt/dotnet</code>目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /opt/dotnet &amp;&amp; sudo tar zxf dotnet.tar.gz -C /opt/dotnet</div></pre></td></tr></table></figure></p>
<!--more-->
<p><img src="http://static.zybuluo.com/danerlt/fcrpepfzeodbouh8ziu6aamo/image_1bc6vvdrm1df148k1k17128p1u011g.png" alt="image_1bc6vvdrm1df148k1k17128p1u011g.png-9.5kB"></p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>将dotnet创建一个链接到<code>/usr/local/bin</code>目录下，从而达到在任何目录下都可以运行dotnet<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /opt/dotnet/dotnet /usr/local/bin</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/017amet2egfea7737kpm62k5/image_1bc70608u1531nb019nj1cdu1hvv1t.png" alt="image_1bc70608u1531nb019nj1cdu1hvv1t.png-3.3kB"></p>
<h2 id="创建HelloWorld"><a href="#创建HelloWorld" class="headerlink" title="创建HelloWorld"></a>创建HelloWorld</h2><p>让我们来初始化一个简单的HelloWorld应用吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet new console -o hwapp</div></pre></td></tr></table></figure></p>
<p>如图所示，表示创建成功。<br><img src="http://static.zybuluo.com/danerlt/ch9o5cca65cbylyqhjc0ux1e/image_1bc709o111a1g1gcs1qdpiq165d37.png" alt="image_1bc709o111a1g1gcs1qdpiq165d37.png-42kB"></p>
<h2 id="运行HelloWorld"><a href="#运行HelloWorld" class="headerlink" title="运行HelloWorld"></a>运行HelloWorld</h2><p>首先进入<code>hwapp</code>目录，然后运行即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd hwapp</div><div class="line">dotnet restore</div><div class="line">dotnet run</div></pre></td></tr></table></figure></p>
<p>如图所示，执行成功，dotnet core的环境就搭建好了。<br><img src="http://static.zybuluo.com/danerlt/ygor8jgr8og0qe2e3t2tqtqt/image_1bc70gghn1hvm18jp7811q91eh73k.png" alt="image_1bc70gghn1hvm18jp7811q91eh73k.png-28.8kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;.NET Core 是.NET Framework的新一代版本，是微软开发的第一个官方版本，具有跨平台 (Windows、Mac OSX、Linux) 能力的应用程序开发框架 (Application Framework)，未来也将会支持 FreeBSD 与 Alpine 平台，也是微软在一开始发展时就开源的软件平台&lt;a href=&quot;http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png&quot;&gt;1&lt;/a&gt;  ，它经常也会拿来和现有的开源 .NET 平台 Mono 比较。&lt;br&gt;由于 .NET Core 的开发目标是跨平台的 .NET 平台，因此 .NET Core 会包含 .NET Framework 的类库，但与 .NET Framework 不同的是 .NET Core 采用包化 (Packages) 的管理方式，应用程序只需要获取需要的组件即可，与 .NET Framework 大包式安装的作法截然不同，同时各包亦有独立的版本线 (Version line)，不再硬性要求应用程序跟随主线版本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装mssql-Tools</title>
    <link href="http://litao.work/2017/03/23/Linux%E5%AE%89%E8%A3%85mssql-tools/"/>
    <id>http://litao.work/2017/03/23/Linux安装mssql-tools/</id>
    <published>2017-03-23T07:23:22.000Z</published>
    <updated>2017-08-30T07:29:21.622Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>MSSQL.TOOLS（原名sqlmgmt。com）提供了有用的SQL工具，帮助数据库开发人员和/或数据库用户。sqlmgmt.com目前集中在微软SQL Server工具。许多工具都是免费软件，可以提高客户的效率和生产率。</p>
</blockquote>
<a id="more"></a>
<h2 id="1-导入repo"><a href="#1-导入repo" class="headerlink" title="1.导入repo"></a>1.导入repo</h2><p>将prod.repo导入的<code>/etc/yum.repos.d</code>目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl https://packages.microsoft.com/config/rhel/7/prod.repo &gt; /etc/yum.repos.d/msprod.repo</div></pre></td></tr></table></figure></p>
<p>使用ls命令查看<code>/etc/yum.repos.d</code>目录下是否有prod.repo文件,有即说明导入成功。<br><img src="http://static.zybuluo.com/danerlt/9wchbfpvh42vn1tdjdvdnrn6/image_1bbprkd4jbvi2gq1hma1s00178t9.png" alt="image_1bbprkd4jbvi2gq1hma1s00178t9.png-17.2kB"></p>
<h2 id="2-移除旧版本"><a href="#2-移除旧版本" class="headerlink" title="2.移除旧版本"></a>2.移除旧版本</h2><p>如果你以前安装过mysql-tools,需要移除掉以前的unixODBC包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo yum update</div><div class="line">sudo yum install mssql-tools unixODBC-devel</div></pre></td></tr></table></figure></p>
<!--more-->
<p><img src="http://static.zybuluo.com/danerlt/4x6t8mlfqys1e9h5m5nd9inr/image_1bbprteosd3213897i714qf1ri5m.png" alt="image_1bbprteosd3213897i714qf1ri5m.png-102.2kB"><br><img src="http://static.zybuluo.com/danerlt/78pt2mc3qt812bagz7dvaqna/image_1bbpsdkm81rir1kcbjadvls1sgb13.png" alt="image_1bbpsdkm81rir1kcbjadvls1sgb13.png-18.2kB"></p>
<h2 id="3-安装mysql-tools"><a href="#3-安装mysql-tools" class="headerlink" title="3.安装mysql-tools"></a>3.安装mysql-tools</h2><p>使用下面的命令安装mysql-tools，一路YES<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo yum update</div><div class="line">sudo yum install mssql-tools unixODBC-devel</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/rkbgitslpfmcev2y9dd7oa80/image_1bbpsg85g1rn0p5ju51fafmcg1g.png" alt="image_1bbpsg85g1rn0p5ju51fafmcg1g.png-60.5kB"><br><img src="http://static.zybuluo.com/danerlt/5ri1ne6spoizj0cqp4qxd1du/image_1bbpsgstk1ui814tlel1nugoff1t.png" alt="image_1bbpsgstk1ui814tlel1nugoff1t.png-31.1kB"><br>，看到如下图所示说明mysql-tools安装成功<br><img src="http://static.zybuluo.com/danerlt/z7n0853v38lyocm9qdr8bt68/image_1bbpshdam1m0c142s1cb5hcb5482a.png" alt="image_1bbpshdam1m0c142s1cb5hcb5482a.png-18.8kB"><br>如何你需要生气mysql-tools可以使用以下命令升级<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo yum check-update</div><div class="line">sudo yum update mssql-tools</div></pre></td></tr></table></figure></p>
<h2 id="4-设置环境变量"><a href="#4-设置环境变量" class="headerlink" title="4.设置环境变量"></a>4.设置环境变量</h2><p>要想在任何路径下运行mssql-tools，你需要将<code>/opt/mssql-tools/bin/</code>添加到PATH里面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;export PATH=&quot;$PATH:/opt/mssql-tools/bin&quot;&apos; &gt;&gt; ~/.bash_profile</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/2buhs5a1ao3tnqvhd5svcs1v/image_1bbt0854er1le2i1f8012vc1mr69.png" alt="image_1bbt0854er1le2i1f8012vc1mr69.png-43.8kB"></p>
<h2 id="5-测试是否可以连接到SQL-Server"><a href="#5-测试是否可以连接到SQL-Server" class="headerlink" title="5.测试是否可以连接到SQL Server"></a>5.测试是否可以连接到SQL Server</h2><p>使用以下命令连接到你的SQL Server实例上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqlcmd -S localhost -U SA</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/maz3in3kz7x6jr9awe1g3gq6/image_1bbt0jtvru001jor104tqjgvs2m.png" alt="image_1bbt0jtvru001jor104tqjgvs2m.png-15.7kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;MSSQL.TOOLS（原名sqlmgmt。com）提供了有用的SQL工具，帮助数据库开发人员和/或数据库用户。sqlmgmt.com目前集中在微软SQL Server工具。许多工具都是免费软件，可以提高客户的效率和生产率。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos安装SQL Server</title>
    <link href="http://litao.work/2017/03/22/CentOS-%E5%AE%89%E8%A3%85SQL-Server/"/>
    <id>http://litao.work/2017/03/22/CentOS-安装SQL-Server/</id>
    <published>2017-03-22T01:49:51.000Z</published>
    <updated>2017-08-30T07:32:58.226Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>MS SQL Server是微软开发的关系数据库管理系统（RDBMS）。此产品是为存储检索数据的基本功能而构建的，它是其他应用程序所要求的。它可以在同一台计算机上运行，也可以在网络上运行。</p>
</blockquote>
<p>本次安装SQL Server的Linux版本为Centos7，使用xshell和xftp远程操作。<br><a id="more"></a></p>
<h2 id="1-导入repo包"><a href="#1-导入repo包" class="headerlink" title="1.导入repo包"></a>1.导入repo包</h2><p>使用xftp将mssql-server.repo和prod.repo包放到<code>/etc/yum.repos.d</code></p>
<blockquote>
<p>curl <a href="https://packages.microsoft.com/config/rhel/7/mssql-server.repo" target="_blank" rel="external">https://packages.microsoft.com/config/rhel/7/mssql-server.repo</a> &gt; /etc/yum.repos.d/mssql-server.repo<br>curl <a href="https://packages.microsoft.com/config/rhel/7/prod.repo" target="_blank" rel="external">https://packages.microsoft.com/config/rhel/7/prod.repo</a> &gt; /etc/yum.repos.d/msprod.repo</p>
</blockquote>
<p>或者使用curl命令<br><img src="http://static.zybuluo.com/danerlt/oyb59dbtpjhxyttfjcsn1aja/image_1bbppervk1ebs7de11ucaei12com.png" alt="image_1bbppervk1ebs7de11ucaei12com.png-11.6kB"><br>使用ls命令在<code>/etc/yum.repos.d</code>目录下查看到了mysql-server.repo即可，（prod.repo在安装sqltool时需要用到）<br><!--more--><br><img src="http://static.zybuluo.com/danerlt/3cby07w24dr3fmti13lkl3lc/image_1bbppclc515bd82j1fm59fol8c9.png" alt="image_1bbppclc515bd82j1fm59fol8c9.png-61.3kB"></p>
<h2 id="2-使用yum安装SQL-Server"><a href="#2-使用yum安装SQL-Server" class="headerlink" title="2.使用yum安装SQL-Server"></a>2.使用yum安装SQL-Server</h2><p>使用yum install安装SQL-Server</p>
<blockquote>
<p>yum install -y mssql-server</p>
</blockquote>
<p><img src="http://static.zybuluo.com/danerlt/hghtt5etrj6znys74e9tu7mf/image_1bbppstsb16g91hm51drk1gk61cjp13.png" alt="image_1bbppstsb16g91hm51drk1gk61cjp13.png-90.2kB"><br>出现已安装:<code>mssql-server.x86_64 0:14.0.405.200-1</code>说明SQL Server安装成功<br><img src="http://static.zybuluo.com/danerlt/8amgkx893ygwzayk00xe4ang/image_1bbpq0ked16rh1dj03jhj5r7ij1g.png" alt="image_1bbpq0ked16rh1dj03jhj5r7ij1g.png-48.7kB"></p>
<h2 id="安装完成后使用mssql-conf-setup进行配置"><a href="#安装完成后使用mssql-conf-setup进行配置" class="headerlink" title="安装完成后使用mssql-conf setup进行配置"></a>安装完成后使用mssql-conf setup进行配置</h2><p>首次运行时需要输入<code>Yes</code>接受Lincense，然后输入SQL-Server的密码，请确保超级管理员（SA）的密码足够强，最小长度为8个字符，包括大写和小写字母，10进制数字或非字母数字符号</p>
<blockquote>
<p>/opt/mssql/bin/mssql-conf setup</p>
</blockquote>
<p><img src="http://static.zybuluo.com/danerlt/86lbqlvb545hont75ttw0ei7/image_1bbpqdkmh40ktdl5hileu17rv9.png" alt="image_1bbpqdkmh40ktdl5hileu17rv9.png-13.9kB"><br>看到setup completed sucessfully说明配置成功，接下来我们看SQL-Servlet服务启动没有<br><img src="http://static.zybuluo.com/danerlt/kfs6rstx1x9cp3k0chkj0x6v/image_1bbpqhob19051oa11o24cpgn2jm.png" alt="image_1bbpqhob19051oa11o24cpgn2jm.png-19.2kB"></p>
<h2 id="配置完成后，验证服务是否启动"><a href="#配置完成后，验证服务是否启动" class="headerlink" title="配置完成后，验证服务是否启动"></a>配置完成后，验证服务是否启动</h2><p>主要看Active对应的值是什么，active表示启动了，inactive表示未启动。</p>
<blockquote>
<p>systemctl status mssql-server</p>
</blockquote>
<p>看到active (running)说明服务启动了。<br><img src="http://static.zybuluo.com/danerlt/7cgzvsg1f81ye1vfhv85gh4w/image_1bbpqpg3p29c1r51jfb1bgbm7m.png" alt="image_1bbpqpg3p29c1r51jfb1bgbm7m.png-59.1kB"><br>mysql-server没启动是下面这样的，<br><img src="http://static.zybuluo.com/danerlt/qgvk8dktde5va8rj6gngmdiv/image_1bbpqs17o1qo68bc98h173vi9i13.png" alt="image_1bbpqs17o1qo68bc98h173vi9i13.png-54.2kB"></p>
<h2 id="允许远程连接，打开在CentOS的防火墙SQL服务器端口。"><a href="#允许远程连接，打开在CentOS的防火墙SQL服务器端口。" class="headerlink" title="允许远程连接，打开在CentOS的防火墙SQL服务器端口。"></a>允许远程连接，打开在CentOS的防火墙SQL服务器端口。</h2><p>默认的SQL服务器端口是TCP 1433。如果你正在使用的防火墙是firewalld，你可以使用下面的命令</p>
<blockquote>
<p>sudo firewall-cmd –zone=public –add-port=1433/tcp –permanent<br>sudo firewall-cmd –reload</p>
</blockquote>
<p>出现sucess表示设置成功<br><img src="http://static.zybuluo.com/danerlt/slqqbqr1sbhde0wqg7s52o8l/image_1bbpr1oj872i15u9v4m1dhlcbp9.png" alt="image_1bbpr1oj872i15u9v4m1dhlcbp9.png-7.5kB"></p>
<h2 id="升级SQL-Server"><a href="#升级SQL-Server" class="headerlink" title="升级SQL Server"></a>升级SQL Server</h2><blockquote>
<p>sudo yum update mssql-server</p>
</blockquote>
<p>这些命令将下载最新的软件包和替换二进制文件位于下<code>/opt/mssql</code>。用户生成的数据库和系统数据库不会受此操作的影响。我这里安装时安装的最新的，所以没有升级包。<br><img src="http://static.zybuluo.com/danerlt/9rq4lsb1v6rb83t5hur8opc8/image_1bbpr4dqoroo195s15e51b35888m.png" alt="image_1bbpr4dqoroo195s15e51b35888m.png-14.8kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;MS SQL Server是微软开发的关系数据库管理系统（RDBMS）。此产品是为存储检索数据的基本功能而构建的，它是其他应用程序所要求的。它可以在同一台计算机上运行，也可以在网络上运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本次安装SQL Server的Linux版本为Centos7，使用xshell和xftp远程操作。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://litao.work/2017/03/21/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://litao.work/2017/03/21/git常用命令/</id>
    <published>2017-03-21T14:49:06.000Z</published>
    <updated>2017-08-30T07:24:06.304Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>   git init</td>
<td style="text-align:left">把当前的目录变成可以管理的git仓库，生成隐藏.git文件。</td>
</tr>
<tr>
<td>   git add XX</td>
<td style="text-align:left">把xx文件添加到暂存区去。</td>
</tr>
<tr>
<td>   git commit –m “XX”</td>
<td style="text-align:left">提交文件 –m 后面的是注释。</td>
</tr>
<tr>
<td>   git status</td>
<td style="text-align:left">查看仓库状态</td>
</tr>
<tr>
<td>   git diff  XX</td>
<td style="text-align:left">查看XX文件修改了那些内容</td>
</tr>
<tr>
<td>   git log</td>
<td style="text-align:left">查看历史记录</td>
</tr>
<tr>
<td>   git reset  –hard HEAD^ 或者 git reset  –hard HEAD~</td>
<td style="text-align:left">回退到上一个版本(如果想回退到100个版本，使用git reset –hard HEAD~100 )</td>
</tr>
<tr>
<td>   git reflog</td>
<td style="text-align:left">查看历史记录的版本号id</td>
</tr>
</tbody>
</table>
   <a id="more"></a>
<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>   git checkout – XX</td>
<td style="text-align:left">把XX文件在工作区的修改全部撤销。</td>
</tr>
<tr>
<td>   git rm XX</td>
<td style="text-align:left">删除XX文件</td>
</tr>
<tr>
<td>   git remote add origin XXXX</td>
<td style="text-align:left">关联一个远程库（XXXX表示Git远程库的地址sg.git@github.com/Lt-grint.github.io）</td>
</tr>
<tr>
<td>   git push –u(第一次要用-u 以后不需要) origin master</td>
<td style="text-align:left">把当前master分支推送到远程库</td>
</tr>
<tr>
<td>   git clone XXXX</td>
<td style="text-align:left">从远程库中克隆(XXXX表示Git远程库的地址)</td>
</tr>
<tr>
<td>   git checkout –b dev</td>
<td style="text-align:left">创建dev分支 并切换到dev分支上</td>
</tr>
<tr>
<td>   git branch</td>
<td style="text-align:left">查看当前所有的分支</td>
</tr>
<tr>
<td>   git checkout master</td>
<td style="text-align:left">切换回master分支</td>
</tr>
<tr>
<td>   git merge dev</td>
<td style="text-align:left">在当前的分支上合并dev分支</td>
</tr>
<tr>
<td>   git branch –d dev</td>
<td style="text-align:left">删除dev分支</td>
</tr>
<tr>
<td>   git branch name</td>
<td style="text-align:left">创建分支</td>
</tr>
<tr>
<td>   git stash</td>
<td style="text-align:left">把当前的工作隐藏起来 等以后恢复现场后继续工作</td>
</tr>
<tr>
<td>   git stash list</td>
<td style="text-align:left">查看所有被隐藏的文件列表</td>
</tr>
<tr>
<td>   git stash apply</td>
<td style="text-align:left">恢复被隐藏的文件，但是内容不删除</td>
</tr>
<tr>
<td>   git stash drop</td>
<td style="text-align:left">删除文件</td>
</tr>
<tr>
<td>   git stash pop</td>
<td style="text-align:left">恢复文件的同时 也删除文件</td>
</tr>
<tr>
<td>   git remote</td>
<td style="text-align:left">查看远程库的信息</td>
</tr>
<tr>
<td>   git remote –v</td>
<td style="text-align:left">查看远程库的详细信息</td>
</tr>
<tr>
<td>   git push origin master</td>
<td style="text-align:left">Git会把master分支推送到远程库对应的远程分支上</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;   git init&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;把当前的目录变成可以管理的git仓库，生成隐藏.git文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git add XX&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;把xx文件添加到暂存区去。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git commit –m “XX”&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;提交文件 –m 后面的是注释。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git status&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看仓库状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git diff  XX&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看XX文件修改了那些内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git log&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看历史记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git reset  –hard HEAD^ 或者 git reset  –hard HEAD~&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;回退到上一个版本(如果想回退到100个版本，使用git reset –hard HEAD~100 )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;   git reflog&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;查看历史记录的版本号id&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
      <category term="commands" scheme="http://litao.work/tags/commands/"/>
    
  </entry>
  
  <entry>
    <title>LF Will Be Replaced by CRLF解决方案</title>
    <link href="http://litao.work/2017/03/21/LF-will-be-replaced-by-CRLF-in/"/>
    <id>http://litao.work/2017/03/21/LF-will-be-replaced-by-CRLF-in/</id>
    <published>2017-03-21T14:41:41.000Z</published>
    <updated>2017-08-30T07:32:44.680Z</updated>
    
    <content type="html"><![CDATA[<p>在使用git提交时出现错误提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LF will be replaced by CRLF in *** . The file will have its original line endings in your working directory.</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>出现这个问题的原因是window平台下的换行符合Linux下的换行符不一致，Git是Linux平台下，所以在window平台下使用Git就会报这样的错.</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在shell中将autocrlf改为false。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config –-global core.autocrlf false</div></pre></td></tr></table></figure></p>
<p>接下来你就可以继续你的github之旅了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用git提交时出现错误提示&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;LF will be replaced by CRLF in *** . The file will have its original line endings in your working directory.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
      <category term="solution" scheme="http://litao.work/tags/solution/"/>
    
  </entry>
  
  <entry>
    <title>Vmware安装CentOS7</title>
    <link href="http://litao.work/2017/03/21/Vmware-%E5%AE%89%E8%A3%85Centos7/"/>
    <id>http://litao.work/2017/03/21/Vmware-安装Centos7/</id>
    <published>2017-03-21T14:30:00.000Z</published>
    <updated>2017-08-30T07:43:39.900Z</updated>
    
    <content type="html"><![CDATA[<p>由于安装Oracle时虚拟机出了故障，遂决定重装centos7.</p>
<h2 id="1-选择打开电源时进入固件"><a href="#1-选择打开电源时进入固件" class="headerlink" title="1.选择打开电源时进入固件"></a>1.选择打开电源时进入固件</h2><p><img src="http://static.zybuluo.com/danerlt/ymikzetwhqubg4ksuhprffr3/image_1bbnrvrmd82o1uja1p6u15ll1h9b9.png" alt="image_1bbnrvrmd82o1uja1p6u15ll1h9b9.png-126.7kB"><br><a id="more"></a></p>
<h2 id="2-进入boot选项，按加减法将CD-ROM移动到最顶上，按F10保存"><a href="#2-进入boot选项，按加减法将CD-ROM移动到最顶上，按F10保存" class="headerlink" title="2.进入boot选项，按加减法将CD-ROM移动到最顶上，按F10保存"></a>2.进入boot选项，按加减法将CD-ROM移动到最顶上，按F10保存</h2><p><img src="http://static.zybuluo.com/danerlt/2l7xpb2i79ackly75qr8uo3z/image_1bbns84rirbpq391c9r1b4115hfm.png" alt="image_1bbns84rirbpq391c9r1b4115hfm.png-112.4kB"></p>
<h2 id="3-直接安装centos7"><a href="#3-直接安装centos7" class="headerlink" title="3.直接安装centos7"></a>3.直接安装centos7</h2><p>这里我选择的是第一个直接安装centos7,第二个选项是测试光盘，我转过一次就没有再选择这个测试光盘了。回车进入安装。<br><img src="http://static.zybuluo.com/danerlt/7cjzn587mhbhrfgwf21hhop5/image_1bbnsb2b41qepf4iuc0hda133o13.png" alt="image_1bbnsb2b41qepf4iuc0hda133o13.png-10.9kB"><br>这里按回车键或者等待60秒即可跳过<br><img src="http://static.zybuluo.com/danerlt/nql49nnes2ofpm3esd0m5evq/image_1bbnsmmh31c19iba1vjgjlv173v1g.png" alt="image_1bbnsmmh31c19iba1vjgjlv173v1g.png-9.5kB"></p>
<h2 id="4-安装语言选择中文或者English-然后继续"><a href="#4-安装语言选择中文或者English-然后继续" class="headerlink" title="4.安装语言选择中文或者English,然后继续"></a>4.安装语言选择中文或者English,然后继续</h2><p><img src="http://static.zybuluo.com/danerlt/d5184hxdxmk0sl4hpwde9jok/image_1bbnsujj61lqa1lr381h1f5t5jv1t.png" alt="image_1bbnsujj61lqa1lr381h1f5t5jv1t.png-126.2kB"></p>
<h2 id="5-软件安装"><a href="#5-软件安装" class="headerlink" title="5.软件安装"></a>5.软件安装</h2><p><img src="http://static.zybuluo.com/danerlt/oq4tl2j2rillfqfds6q1ah30/image_1bbnt28i21gv5fge1uimr3k15ln2a.png" alt="image_1bbnt28i21gv5fge1uimr3k15ln2a.png-149.8kB"><br>这里面Java，PHP，Python等开发语言我们自己安装，就不需要勾选。然后点击完成即可。<br><img src="http://static.zybuluo.com/danerlt/mbkt4pb5d9y4xq5jx5bpec7i/image_1bbnt6dj1cf81r3cskg1mnbsju2n.png" alt="image_1bbnt6dj1cf81r3cskg1mnbsju2n.png-205.2kB"></p>
<h2 id="6-安装目录位置"><a href="#6-安装目录位置" class="headerlink" title="6.安装目录位置"></a>6.安装目录位置</h2><p>可以选择系统自动配置，也可选择自己配置，这里我选择的是自动配置。<br><img src="http://static.zybuluo.com/danerlt/k6wueqqyvqkf4rtuiu24bqj6/image_1bbntan9kq52in8n7vet1ihg34.png" alt="image_1bbntan9kq52in8n7vet1ihg34.png-113.1kB"><br>提示空间不足，点击回收空间即可。<br><img src="http://static.zybuluo.com/danerlt/y13mp0awn9am5wyy02svnnro/image_1bbntd358jc28dk1i5a15vuq73h.png" alt="image_1bbntd358jc28dk1i5a15vuq73h.png-131.8kB"><br>选择全部删除，确定后<strong>整个硬盘就格式化了，整个硬盘就格式化了，整个硬盘就格式化了</strong>，一定要考虑好了再决定是否全部格式化。<br><img src="http://static.zybuluo.com/danerlt/9yds524oaosylvv69il8w5cu/image_1bbntgthed0sdm1mq41ni7j0b3u.png" alt="image_1bbntgthed0sdm1mq41ni7j0b3u.png-95kB"></p>
<h2 id="7-设置ROOT密码，密码比较简单需要点两次完成。"><a href="#7-设置ROOT密码，密码比较简单需要点两次完成。" class="headerlink" title="7.设置ROOT密码，密码比较简单需要点两次完成。"></a>7.设置ROOT密码，密码比较简单需要点两次完成。</h2><p><img src="http://static.zybuluo.com/danerlt/qb3995rn977y65s70n3i6igo/image_1bbntm7eh13ss16hg12111t86m3l4b.png" alt="image_1bbntm7eh13ss16hg12111t86m3l4b.png-73.6kB"></p>
<h2 id="8-等待完成重启即可"><a href="#8-等待完成重启即可" class="headerlink" title="8.等待完成重启即可"></a>8.等待完成重启即可</h2><p><img src="http://static.zybuluo.com/danerlt/466wn9wuee4f4e42wkg0a74j/image_1bbntook77s3169m1q2c29s17th4o.png" alt="image_1bbntook77s3169m1q2c29s17th4o.png-206.2kB"></p>
<h2 id="9-接受许可证"><a href="#9-接受许可证" class="headerlink" title="9.接受许可证"></a>9.接受许可证</h2><p><img src="http://static.zybuluo.com/danerlt/imkmo6owa7m3jvmgcsay9l1t/image_1bbojlrpusas7emt94dddvkg55.png" alt="image_1bbojlrpusas7emt94dddvkg55.png-99.7kB"><br><img src="http://static.zybuluo.com/danerlt/dcotjoos172hgr845u7d8gzp/image_1bbojmpq71ltavta1m6e1pgg1f7i5i.png" alt="image_1bbojmpq71ltavta1m6e1pgg1f7i5i.png-33.5kB"><br><img src="http://static.zybuluo.com/danerlt/c4crry9uz4hy06697u0njaqi/image_1bbojo4dn62s1acr13tr4o396l5v.png" alt="image_1bbojo4dn62s1acr13tr4o396l5v.png-99.3kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于安装Oracle时虚拟机出了故障，遂决定重装centos7.&lt;/p&gt;
&lt;h2 id=&quot;1-选择打开电源时进入固件&quot;&gt;&lt;a href=&quot;#1-选择打开电源时进入固件&quot; class=&quot;headerlink&quot; title=&quot;1.选择打开电源时进入固件&quot;&gt;&lt;/a&gt;1.选择打开电源时进入固件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/danerlt/ymikzetwhqubg4ksuhprffr3/image_1bbnrvrmd82o1uja1p6u15ll1h9b9.png&quot; alt=&quot;image_1bbnrvrmd82o1uja1p6u15ll1h9b9.png-126.7kB&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
      <category term="vmware" scheme="http://litao.work/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>Github配置sshkey</title>
    <link href="http://litao.work/2016/12/15/git%E9%85%8D%E7%BD%AEssh/"/>
    <id>http://litao.work/2016/12/15/git配置ssh/</id>
    <published>2016-12-14T17:58:11.000Z</published>
    <updated>2017-08-30T07:55:06.262Z</updated>
    
    <content type="html"><![CDATA[<p>git使用https协议，每次pull, push都要输入密码，相当的烦。<br>使用git协议，然后使用ssh密钥。这样可以省去每次都输密码。<br><a id="more"></a></p>
<h2 id="github-配置sshkey"><a href="#github-配置sshkey" class="headerlink" title="github 配置sshkey"></a>github 配置sshkey</h2><p>使用ssh-keygen命令生成key,提示需要输入密码是可以按回车跳过，这里输入密码表示每次push时都需要输入密码，按下回车后以后每次<code>git push</code>时就不用输入密码了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;youremail@example&quot;</div></pre></td></tr></table></figure></p>
<p>s.g.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;test@126.com&quot;</div></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/danerlt/ahbmypha8g7xlmfzjpxkciv5/image_1b304rntm1jbk116m1k3p57m1hbs9.png" alt="image_1b304rntm1jbk116m1k3p57m1hbs9.png-44.9kB"></p>
<h2 id="测试ssh-keys是否设置成功"><a href="#测试ssh-keys是否设置成功" class="headerlink" title="测试ssh keys是否设置成功"></a>测试ssh keys是否设置成功</h2><p>使用ssh -T 命令测试设置是否成功,如果出现</p>
<blockquote>
<p>You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<p>表示设置成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/v1sema0z1dwyuiqykou6ucni/image_1b3053n67d731l18rha33arurm.png" alt="image_1b3053n67d731l18rha33arurm.png-10.8kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git使用https协议，每次pull, push都要输入密码，相当的烦。&lt;br&gt;使用git协议，然后使用ssh密钥。这样可以省去每次都输密码。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
      <category term="github" scheme="http://litao.work/tags/github/"/>
    
      <category term="config" scheme="http://litao.work/tags/config/"/>
    
  </entry>
  
  <entry>
    <title>运行，控制面板，命令提示符被禁用的解决方案</title>
    <link href="http://litao.work/2016/12/03/%E8%BF%90%E8%A1%8C%EF%BC%8C%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF%EF%BC%8C%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E8%A2%AB%E7%A6%81%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://litao.work/2016/12/03/运行，控制面板，命令提示符被禁用的解决方案/</id>
    <published>2016-12-03T05:55:47.000Z</published>
    <updated>2017-08-30T07:47:01.122Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>电脑的运行、控制面板、命令提示符被禁用了</p>
<a id="more"></a>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><blockquote>
<p>一：—&gt;gpedit.msc—&gt;用户配置–&gt;管理模块–&gt;系统(单击选中)–&gt;右边找到“阻止访问命令提示符”，鼠标双击，弹出窗口，点选“未配置”–&gt;应用–确定<br>二：—&gt;gpedit.msc—&gt;用户配置–&gt;管理模块–&gt;控制面板(单击选中)–&gt;右边找到“禁止访问控制面板”，鼠标双击，弹出窗口，点选“未配置”–&gt;应用–确定<br>三：—&gt;c:\windows\regedit.exe,HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer,在右边空白处右键，选择“新建”的“DWORD”,然后输入名字“NoRun”，然后双击它，修改NoRun为0即可</p>
</blockquote>
<p>转载自：<a href="http://www.33lc.com/article/6617.html" target="_blank" rel="external">http://www.33lc.com/article/6617.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h3&gt;&lt;p&gt;电脑的运行、控制面板、命令提示符被禁用了&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="windows" scheme="http://litao.work/tags/windows/"/>
    
      <category term="solution" scheme="http://litao.work/tags/solution/"/>
    
  </entry>
  
</feed>
