<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Litao&#39;s Blog</title>
  <subtitle>一个不太勤快的程序猿，偶尔写写自己的心得。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://litao.work/"/>
  <updated>2017-11-06T00:52:51.388Z</updated>
  <id>http://litao.work/</id>
  
  <author>
    <name>李滔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Centos搭建自己的Git服务器</title>
    <link href="http://litao.work/2017/11/06/Centos%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Git%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://litao.work/2017/11/06/Centos搭建自己的Git服务器/</id>
    <published>2017-11-06T00:51:52.000Z</published>
    <updated>2017-11-06T00:52:51.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建Git服务器及使用"><a href="#搭建Git服务器及使用" class="headerlink" title="搭建Git服务器及使用"></a>搭建Git服务器及使用</h2><h3 id="1、安装Git"><a href="#1、安装Git" class="headerlink" title="1、安装Git"></a>1、安装Git</h3><p>执行以下命令安装git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</div><div class="line">yum install git</div></pre></td></tr></table></figure></p>
<p>接下来我们创建一个git用户组和用户，用来运行git服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">groupadd git</div><div class="line">useradd git -g git</div><div class="line">passwd git</div></pre></td></tr></table></figure></p>
<p>最好切换到git用户 不然后面新建的git仓库都要改权限 烦烦烦！！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">su - git</div></pre></td></tr></table></figure></p>
<h3 id="2、创建证书登录"><a href="#2、创建证书登录" class="headerlink" title="2、创建证书登录"></a>2、创建证书登录</h3><p>收集所有需要登录的用户的公钥，公钥位于id_rsa.pub文件中，把我们的公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。</p>
<p>如果没有该文件则创建它：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /home/git/</div><div class="line">mkdir .ssh</div><div class="line">chmod 700 .ssh</div><div class="line">touch .ssh/authorized_keys</div><div class="line">chmod 600 .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<h3 id="3、初始化Git仓库"><a href="#3、初始化Git仓库" class="headerlink" title="3、初始化Git仓库"></a>3、初始化Git仓库</h3><p>首先我们选定一个目录作为Git仓库，假定我们放在git用户的宿主目录/home/git/，在/home/git/目录下输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /home/git</div><div class="line">git init --bare test.git</div><div class="line">Initialized empty Git repository in /home/git/test.git/</div></pre></td></tr></table></figure></p>
<p>以上命令会创建一个空仓库，服务器上的Git仓库通常都以.git结尾。</p>
<h3 id="4、克隆仓库"><a href="#4、克隆仓库" class="headerlink" title="4、克隆仓库"></a>4、克隆仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git clone git@your-ip:test.git</div><div class="line">Cloning into &apos;test&apos;...</div><div class="line">warning: You appear to have cloned an empty repository.</div><div class="line">Checking connectivity... done.</div></pre></td></tr></table></figure>
<p><strong>your-ip 为您 Git 所在服务器 ip 。</strong></p>
<h3 id="5、禁止Shell登录"><a href="#5、禁止Shell登录" class="headerlink" title="5、禁止Shell登录"></a>5、禁止Shell登录</h3><p>出于安全考虑，git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。<br>找到类似下面的一行：</p>
<p>git:x:502:502::/home/git:/bin/bash<br>改为</p>
<p>git:x:502:502::/home/git:/usr/bin/git-shell<br>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p>
<h2 id="注意事项及说明"><a href="#注意事项及说明" class="headerlink" title="注意事项及说明"></a>注意事项及说明</h2><h3 id="1、git仓库可以放在任何目录"><a href="#1、git仓库可以放在任何目录" class="headerlink" title="1、git仓库可以放在任何目录"></a>1、git仓库可以放在任何目录</h3><p>放在/home/git目录下(clone相对于git宿主目录 /home/git/)<br>git clone git@your-ip:test.git<br>如果域名绑定IP就可以直接用域名clone<br>git clone git@www.mayanlong.com:test.git</p>
<p>放在根目录，新建git目录作为仓库(绝对路径 /git/)<br>git clone git@your-ip:/git/test.git</p>
<h3 id="2、目录权限问题"><a href="#2、目录权限问题" class="headerlink" title="2、目录权限问题"></a>2、目录权限问题</h3><p>如果不是用git用户创建的，注意以下目录文件的权限问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.ssh</div><div class="line">test.git</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>如果有问题，可以把该目录的所属者改成git。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R git:git test.git</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建Git服务器及使用&quot;&gt;&lt;a href=&quot;#搭建Git服务器及使用&quot; class=&quot;headerlink&quot; title=&quot;搭建Git服务器及使用&quot;&gt;&lt;/a&gt;搭建Git服务器及使用&lt;/h2&gt;&lt;h3 id=&quot;1、安装Git&quot;&gt;&lt;a href=&quot;#1、安装Git&quot; c
    
    </summary>
    
      <category term="运维" scheme="http://litao.work/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Docker镜像</title>
    <link href="http://litao.work/2017/10/17/docker%E9%95%9C%E5%83%8F/"/>
    <id>http://litao.work/2017/10/17/docker镜像/</id>
    <published>2017-10-17T12:55:44.000Z</published>
    <updated>2017-10-17T12:55:44.251Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker基础</title>
    <link href="http://litao.work/2017/10/17/docker%E5%9F%BA%E7%A1%80/"/>
    <id>http://litao.work/2017/10/17/docker基础/</id>
    <published>2017-10-17T12:55:34.000Z</published>
    <updated>2017-10-17T12:57:37.404Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。</p>
</blockquote>
<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>官方网站上有各种环境下的 <a href="https://docs.docker.com/installation/#installation" target="_blank" rel="external">安装指南</a></p>
<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><p>阿里云的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure></p>
<p>DaoCloud 的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/docker | sh</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h3><p>国内访问 Docker Hub 有时会遇到困难，此时可以配置镜像加速器。国内很多云服务商都提供了加速器服务，例如：</p>
<ul>
<li>阿里云加速器</li>
<li>DaoCloud 加速器</li>
<li>灵雀云加速器</li>
</ul>
<p>注册用户并且申请加速器，会获得如 <a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a> 这样的地址。我们需要将其配置给 Docker 引擎。</p>
<h4 id="Ubuntu-14-04、Debian-7-Wheezy"><a href="#Ubuntu-14-04、Debian-7-Wheezy" class="headerlink" title="Ubuntu 14.04、Debian 7 Wheezy"></a>Ubuntu 14.04、Debian 7 Wheezy</h4><p>对于使用 <strong>upstart</strong> 的系统而言，编辑 <code>/etc/default/docker</code> 文件，在其中的 DOCKER_OPTS 中添加获得的加速器配置 –registry-mirror=&lt;加速器地址&gt;，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DOCKER_OPTS=&quot;--registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com&quot;</div></pre></td></tr></table></figure>
<p>重新启动服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo service docker restart</div></pre></td></tr></table></figure></p>
<h4 id="Ubuntu-16-04、Debian-8-Jessie、CentOS-7"><a href="#Ubuntu-16-04、Debian-8-Jessie、CentOS-7" class="headerlink" title="Ubuntu 16.04、Debian 8 Jessie、CentOS 7"></a>Ubuntu 16.04、Debian 8 Jessie、CentOS 7</h4><p>对于使用 <strong>systemd</strong> 的系统，用 <code>systemctl enable docker</code> 启用服务后，编辑 <code>/etc/systemd/system/multi-user.target.wants/docker.service</code> 文件，找到 <code>ExecStart=</code> 这一行，在这行最后添加加速器地址 <code>--registry-mirror=&lt;加速器地址&gt;</code>，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecStart=/usr/bin/dockerd --registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com</div></pre></td></tr></table></figure></p>
<p>注：对于 1.12 以前的版本，dockerd 换成 docker daemon。</p>
<p>重新加载配置并且重新启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo systemctl daemon-reload</div><div class="line">$ sudo systemctl restart docker</div></pre></td></tr></table></figure></p>
<h4 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h4><p>对于使用 WINDOWS 10 的系统，在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写如阿里云、DaoCloud之类的加速器地址，如：</p>
<p>{<br>  “registry-mirrors”: [<br>    “<a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a>“<br>  ],<br>  “insecure-registries”: []<br>}<br>编辑完成，点击Apply保存后Docker服务会重新启动。</p>
<p>Docker 包括三个基本概念</p>
<ul>
<li>镜像（Image）</li>
<li>容器（Container）</li>
<li>仓库（Repository）</li>
</ul>
<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。</p>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p>
<p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会把容器和虚拟机搞混。</p>
<h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><p>镜像构建完成后，可以很容易的在当前宿主上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。</p>
<p>一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。</p>
<p>通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 &lt;仓库名&gt;:&lt;标签&gt; 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签。</p>
<p>以 Ubuntu 镜像 为例，<code>ubuntu</code> 是仓库的名字，其内包含有不同的版本标签，如，<code>14.04</code>, <code>16.04</code>。我们可以通过 <code>ubuntu:14.04</code>，或者 <code>ubuntu:16.04</code> 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 <code>ubuntu</code>，那将视为 <code>ubuntu:latest</code>。</p>
<p>仓库名经常以 两段式路径 形式出现，比如 <code>jwilder/nginx-proxy</code>，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。</p>
<blockquote>
<p>转载自：<a href="https://yeasy.gitbooks.io/docker_practice/content/basic_concept/repository.html" target="_blank" rel="external">Docker从入门到实践</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装配置&quot;&gt;&lt;a href=&quot;#安装配置&quot; class=&quot;headerlink&quot; title=&quot;安装配置&quot;&gt;&lt;/a&gt;安装配置&lt;/h2&gt;&lt;p&gt;官方网站上有各种环境下的 &lt;a href=&quot;https://docs.docker.com/installation/#installation&quot;&gt;安装指南&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;docker安装&quot;&gt;&lt;a href=&quot;#docker安装&quot; class=&quot;headerlink&quot; title=&quot;docker安装&quot;&gt;&lt;/a&gt;docker安装&lt;/h3&gt;&lt;p&gt;阿里云的安装脚本&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;DaoCloud 的安装脚本&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -sSL https://get.daocloud.io/docker | sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="docker" scheme="http://litao.work/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux防SSH暴力登录</title>
    <link href="http://litao.work/2017/10/17/Linux%E9%98%B2SSH%E6%9A%B4%E5%8A%9B%E7%99%BB%E5%BD%95/"/>
    <id>http://litao.work/2017/10/17/Linux防SSH暴力登录/</id>
    <published>2017-10-17T03:12:12.000Z</published>
    <updated>2017-10-17T03:15:45.362Z</updated>
    
    <content type="html"><![CDATA[<p>前言</p>
<blockquote>
<p>昨天利用flask搭建了一个查看访问本机IP的页面，发现除了我本人还有其他IP访问，因为端口是才设置的，所以推测是有人在扫描我的服务器。</p>
</blockquote>
<a id="more"></a>
<p><img src="http://static.zybuluo.com/danerlt/6w94qhlbq5yw7dttn2gjjydg/image_1bsk1k28justijc1qmn3a91qvp9.png" alt="image_1bsk1k28justijc1qmn3a91qvp9.png-31.2kB"><br>通过表格中查看到一个ip为<code>180.163.8.253</code>，查看下登录日志</p>
<blockquote>
<p>sudo less /var/log/secure |grep 180.163.8.253<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 这里省略了之前出现的很多条一样的记录</div><div class="line">Oct 17 06:51:42 litao sshd[14908]: Did not receive identification string from 180.163.8.254</div></pre></td></tr></table></figure></p>
</blockquote>
<p>Google搜索关键字<code>Did not receive identification string from</code>,在Stackoverflow上有这样一个回答:</p>
<blockquote>
<p>Some miscreant (surprise!) is hammering at ssh to try to find a username/password combination that gets them into the system. Probably from some botnet doing the same to who knows how many other unsuspecting victims.</p>
</blockquote>
<p>Install something like fail2ban or DenyHosts (some of both should be available for any Linux distribution), or set up your local firewall to limit SSH connection attempts. Changing the SSH port makes the dumb brute force tries fail, but it also makes legitimate uses fail.<br>大意是：有人在尝试用用户名密码暴力使用ssh连接你的服务器，可以通过安装fail2ban或DenyHosts或者设置本地防火墙显示ssh连接，更改端口会使强制连接失败，也会让合法用户失败。</p>
<p>所以接下来安装<code>fail2ban</code>,首先查看fail2ban信息</p>
<blockquote>
<p>yum info fail2ban<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">$ yum info fail2ban</div><div class="line">已加载插件：fastestmirror, langpacks</div><div class="line">Determining fastest mirrors</div><div class="line">可安装的软件包</div><div class="line">名称    ：fail2ban</div><div class="line">架构    ：noarch</div><div class="line">版本    ：0.9.7</div><div class="line">发布    ：1.el7</div><div class="line">大小    ：11 k</div><div class="line">源    ：epel/7/x86_64</div><div class="line">简介    ： Daemon to ban hosts that cause multiple authentication errors</div><div class="line">网址    ：http://fail2ban.sourceforge.net/</div><div class="line">协议    ： GPLv2+</div><div class="line">描述    ： Fail2Ban scans log files and bans IP addresses that makes too many password</div><div class="line">         : failures. It updates firewall rules to reject the IP address. These rules can</div><div class="line">         : be defined by the user. Fail2Ban can read multiple log files such as sshd or</div><div class="line">         : Apache web server ones.</div><div class="line">         :</div><div class="line">         : Fail2Ban is able to reduce the rate of incorrect authentications attempts</div><div class="line">         : however it cannot eliminate the risk that weak authentication presents.</div><div class="line">         : Configure services to use only two factor or public/private authentication</div><div class="line">         : mechanisms if you really want to protect services.</div><div class="line">         :</div><div class="line">         : This is a meta-package that will install the default configuration.  Other</div><div class="line">         : sub-packages are available to install support for other actions and</div><div class="line">         : configurations.</div><div class="line">$</div></pre></td></tr></table></figure></p>
</blockquote>
<p>安装fail2ban</p>
<blockquote>
<p>sudo yum install -y fail2ben<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install -y fail2ban</div><div class="line">已加载插件：fastestmirror, langpacks</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line">正在解决依赖关系</div><div class="line">--&gt; 正在检查事务</div><div class="line">---&gt; 软件包 fail2ban.noarch.0.0.9.7-1.el7 将被 安装</div><div class="line">--&gt; 正在处理依赖关系 fail2ban-server = 0.9.7-1.el7，它被软件包 fail2ban-0.9.7-1.el7.noarch 需要</div><div class="line">--&gt; 正在处理依赖关系 fail2ban-sendmail = 0.9.7-1.el7，它被软件包 fail2ban-0.9.7-1.el7.noarch 需要</div><div class="line">--&gt; 正在处理依赖关系 fail2ban-firewalld = 0.9.7-1.el7，它被软件包 fail2ban-0.9.7-1.el7.noarch 需要</div><div class="line">--&gt; 正在检查事务</div><div class="line">---&gt; 软件包 fail2ban-firewalld.noarch.0.0.9.7-1.el7 将被 安装</div><div class="line">---&gt; 软件包 fail2ban-sendmail.noarch.0.0.9.7-1.el7 将被 安装</div><div class="line">--&gt; 正在处理依赖关系 /usr/sbin/sendmail，它被软件包 fail2ban-sendmail-0.9.7-1.el7.noarch 需要</div><div class="line">---&gt; 软件包 fail2ban-server.noarch.0.0.9.7-1.el7 将被 安装</div><div class="line">--&gt; 正在检查事务</div><div class="line">---&gt; 软件包 ssmtp.x86_64.0.2.64-14.el7 将被 安装</div><div class="line">--&gt; 解决依赖关系完成</div><div class="line"></div><div class="line">依赖关系解决</div><div class="line"></div><div class="line">================================================================================================</div><div class="line"> Package                       架构              版本                     源               大小</div><div class="line">================================================================================================</div><div class="line">正在安装:</div><div class="line"> fail2ban                      noarch            0.9.7-1.el7              epel             11 k</div><div class="line">为依赖而安装:</div><div class="line"> fail2ban-firewalld            noarch            0.9.7-1.el7              epel             11 k</div><div class="line"> fail2ban-sendmail             noarch            0.9.7-1.el7              epel             14 k</div><div class="line"> fail2ban-server               noarch            0.9.7-1.el7              epel            288 k</div><div class="line"> ssmtp                         x86_64            2.64-14.el7              epel             50 k</div><div class="line"></div><div class="line">事务概要</div><div class="line">================================================================================================</div><div class="line">安装  1 软件包 (+4 依赖软件包)</div><div class="line"></div><div class="line">总下载量：376 k</div><div class="line">安装大小：1.0 M</div><div class="line">Downloading packages:</div><div class="line">(1/5): fail2ban-firewalld-0.9.7-1.el7.noarch.rpm                         |  11 kB  00:00:01</div><div class="line">(2/5): fail2ban-0.9.7-1.el7.noarch.rpm                                   |  11 kB  00:00:01</div><div class="line">(3/5): fail2ban-sendmail-0.9.7-1.el7.noarch.rpm                          |  14 kB  00:00:00</div><div class="line">(4/5): ssmtp-2.64-14.el7.x86_64.rpm                                      |  50 kB  00:00:00</div><div class="line">(5/5): fail2ban-server-0.9.7-1.el7.noarch.rpm                            | 288 kB  00:00:00</div><div class="line">------------------------------------------------------------------------------------------------</div><div class="line">总计                                                            157 kB/s | 376 kB  00:00:02</div><div class="line">Running transaction check</div><div class="line">Running transaction test</div><div class="line">Transaction test succeeded</div><div class="line">Running transaction</div><div class="line">  正在安装    : fail2ban-server-0.9.7-1.el7.noarch                                          1/5</div><div class="line">  正在安装    : fail2ban-firewalld-0.9.7-1.el7.noarch                                       2/5</div><div class="line">  正在安装    : ssmtp-2.64-14.el7.x86_64                                                    3/5</div><div class="line">  正在安装    : fail2ban-sendmail-0.9.7-1.el7.noarch                                        4/5</div><div class="line">  正在安装    : fail2ban-0.9.7-1.el7.noarch                                                 5/5</div><div class="line">  验证中      : fail2ban-sendmail-0.9.7-1.el7.noarch                                        1/5</div><div class="line">  验证中      : fail2ban-0.9.7-1.el7.noarch                                                 2/5</div><div class="line">  验证中      : fail2ban-firewalld-0.9.7-1.el7.noarch                                       3/5</div><div class="line">  验证中      : fail2ban-server-0.9.7-1.el7.noarch                                          4/5</div><div class="line">  验证中      : ssmtp-2.64-14.el7.x86_64                                                    5/5</div><div class="line"></div><div class="line">已安装:</div><div class="line">  fail2ban.noarch 0:0.9.7-1.el7</div><div class="line"></div><div class="line">作为依赖被安装:</div><div class="line">  fail2ban-firewalld.noarch 0:0.9.7-1.el7         fail2ban-sendmail.noarch 0:0.9.7-1.el7</div><div class="line">  fail2ban-server.noarch 0:0.9.7-1.el7            ssmtp.x86_64 0:2.64-14.el7</div><div class="line"></div><div class="line">完毕！</div><div class="line">$</div></pre></td></tr></table></figure></p>
</blockquote>
<p>启动fail2ban<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable fail2ban #开机启动</div><div class="line">systemctl start fail2ban</div></pre></td></tr></table></figure></p>
<p>配置fail2ben</p>
<blockquote>
<p>/etc/fail2ban/jail.conf</p>
</blockquote>
<p>这个设定档是Fail2Ban 的重点，它是以[名称] 的方式来定义每个Profile，而[DEFAULT] 这个Profile 是代表所有Profile 的预设值。<br>所有参数的名称都是通用的，你可以依照你的需求做修改。<br>常见配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[DEFAULT]</div><div class="line"> ignoreip = 127.0.0.1/8 192.168.1.0/24 #忽略IP的清单，以空白区隔不同IP </div><div class="line"> bantime = 600 #封锁的时间，单位:秒，600=10分钟，改为-1表示「永久」封锁</div><div class="line"> findtime = 600 #在多久的时间内，单位:秒，600=10分钟</div><div class="line"> maxretry = 3 #登入失败几次封锁</div><div class="line">[ssh-iptables]</div><div class="line"> enabled  = true # 启用 SSH</div><div class="line"> filter   = sshd</div><div class="line"> action   = iptables[name=SSH, port=ssh, protocol=tcp]</div><div class="line">            sendmail-whois[name=SSH, dest=收件者 EMail, sender=收件人 EMail]</div><div class="line"> logpath  = /var/log/secure # 登录档的位置</div><div class="line"> maxretry = 10＃登入失败几次封锁</div><div class="line"> bantime = 14400＃封锁的时间，单位：秒，14400 = 4小时</div></pre></td></tr></table></figure></p>
<p>具体配置可以查看官方Github仓库：<a href="https://github.com/fail2ban/fail2ban" target="_blank" rel="external">https://github.com/fail2ban/fail2ban</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;昨天利用flask搭建了一个查看访问本机IP的页面，发现除了我本人还有其他IP访问，因为端口是才设置的，所以推测是有人在扫描我的服务器。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="运维" scheme="http://litao.work/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装配置MongoDB</title>
    <link href="http://litao.work/2017/10/12/Centos7%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEMongoDB/"/>
    <id>http://litao.work/2017/10/12/Centos7安装配置MongoDB/</id>
    <published>2017-10-12T03:40:50.000Z</published>
    <updated>2017-10-12T03:42:09.773Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。<br><a id="more"></a></p>
<h2 id="安装MongodbDB"><a href="#安装MongodbDB" class="headerlink" title="安装MongodbDB"></a>安装MongodbDB</h2><p>MongoDB 提供了 linux 各发行版本 64 位的安装包，你可以在官网下载安装包。<br>下载地址：<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">https://www.mongodb.com/download-center#community</a><br><img src="http://static.zybuluo.com/danerlt/m50v1fgyjrkwq0v4sd8gomyz/image_1bs799lvm1ebutgnenar88o0j9.png" alt="image_1bs799lvm1ebutgnenar88o0j9.png-119.3kB"><br>下载完安装包，并解压 tgz（以下演示的是 64 位 Linux上的安装） 。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">curl https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.4.9.tgz  -o mongodb  # 下载</div><div class="line">sudo tar -zxvf mongodb -C /usr/local   # 解压</div><div class="line">cd /usr/local                 </div><div class="line">sudo mv mongodb-linux-x86_64-rhel70-3.4.9 mongodb  #更改目录名</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="配置MongoDB"><a href="#配置MongoDB" class="headerlink" title="配置MongoDB"></a>配置MongoDB</h2><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/profile</div></pre></td></tr></table></figure>
<p>在最后添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">MONGO_HOME=/usr/local/mongodb</div><div class="line">PATH=$MONGO_HOME/bin:$PATH</div></pre></td></tr></table></figure></p>
<p>立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure></p>
<h3 id="创建数据目录及日志目录"><a href="#创建数据目录及日志目录" class="headerlink" title="创建数据目录及日志目录"></a>创建数据目录及日志目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/db  #mongodb默认数据存放目录</div><div class="line">mkdir -p /var/log/mongodb</div></pre></td></tr></table></figure>
<h3 id="创建启动参数脚本"><a href="#创建启动参数脚本" class="headerlink" title="创建启动参数脚本"></a>创建启动参数脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd MONGO_HOME</div><div class="line">vim mongo.conf</div></pre></td></tr></table></figure>
<p>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dbpath=/data/db</div><div class="line">logpath=/var/log/mongodb</div><div class="line">logappend=true</div><div class="line">fork=true</div><div class="line">port=27017</div></pre></td></tr></table></figure></p>
<p>手动开启mongodb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod -f mongo.conf</div></pre></td></tr></table></figure></p>
<p>手动关闭mongodb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod -f mongo.conf  --shutdown</div></pre></td></tr></table></figure></p>
<h3 id="设置mongodb开机启动"><a href="#设置mongodb开机启动" class="headerlink" title="设置mongodb开机启动"></a>设置mongodb开机启动</h3><p>编写启动脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/init.d/mongodb</div></pre></td></tr></table></figure></p>
<p>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh  </div><div class="line">#  </div><div class="line">#chkconfig: 2345 80 90  </div><div class="line">#description: mongodb  </div><div class="line">start() &#123;  </div><div class="line"> /fugm/mongodb/bin/mongod -f /fugm/mongodb/mongo.conf  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">stop() &#123;  </div><div class="line">  /fugm/mongodb/bin/mongod -f /fugm/mongodb/mongo.conf --shutdown  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">case &quot;$1&quot; in  </div><div class="line">  start)  </div><div class="line"> start  </div><div class="line"> ;;  </div><div class="line">  stop)  </div><div class="line"> stop  </div><div class="line"> ;;  </div><div class="line">  restart)  </div><div class="line"> stop  </div><div class="line"> start  </div><div class="line"> ;;  </div><div class="line">  *)  </div><div class="line"> echo $&quot;Usage: $0 &#123;start|stop|restart&#125;&quot;  </div><div class="line"> exit 1  </div><div class="line">esac</div></pre></td></tr></table></figure></p>
<p>点击Esc，输入 :wq 完成编辑并保存退出<br>之后执行如下脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /etc/init.d  </div><div class="line">chkconfig --add mongodb  </div><div class="line">chmod +x  mongodb  </div><div class="line">chkconfig mongodb on</div></pre></td></tr></table></figure></p>
<p>这样就可以使用systemctl来开启和结束mongodb了。<br>停止mongodb服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl stop mongodb</div></pre></td></tr></table></figure></p>
<p>开启mongodb服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start mongodb</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。&lt;br&gt;MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="mongodb" scheme="http://litao.work/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Centos7进入单用户</title>
    <link href="http://litao.work/2017/09/20/centos7%E8%BF%9B%E5%85%A5%E5%8D%95%E7%94%A8%E6%88%B7/"/>
    <id>http://litao.work/2017/09/20/centos7进入单用户/</id>
    <published>2017-09-20T08:19:29.000Z</published>
    <updated>2017-09-20T08:20:02.613Z</updated>
    
    <content type="html"><![CDATA[<p>单用户模式是Linux操作系统中的运行级别之一，Linux操作系统具有6种运行级别，用于不同的需求或情况。单用户模式主要用于执行清理文件系统，管理配额，恢复文件系统以及恢复丢失的根密码等管理任务。在这种模式下，服务将无法启动，除root以外，不允许任何用户登录，系统也不会要求输入密码进行登录。<br><a id="more"></a><br>1.重启linux系统<br>在启动时，你可能会看到如下所示的启动画面，grub正在计算引导默认操作系统的时间，如/etc/grub2.cfg中所述;此时按任意键可中断自动启动。我们进入单用户需要按e编辑内核参数。<br><img src="http://static.zybuluo.com/danerlt/90tjjqzni1cwt8dnhj9rdg6v/image_1bpqcs0qm6keib01jkd1a9j1nls9.png" alt="image_1bpqcs0qm6keib01jkd1a9j1nls9.png-45.1kB"><br>按下之后，您将看到有关所选操作系统的信息。它提供了有关安装操作系统的硬盘和分区的信息，内核的位置，语言，视频输出，键盘类型，键盘表，崩溃内核和initrd（初始RAM盘）<br><img src="http://static.zybuluo.com/danerlt/7p6gw338vtxcui5llyl2wnpj/image_1bqf5dpls1jbb1rmi129c1089l09p.png" alt="image_1bqf5dpls1jbb1rmi129c1089l09p.png-22.7kB"><br>进入单用户模式;转到第二行（使用linux 16或linuxefi开始）使用上下箭头，然后修改ro参数。修改为<code>rw init=/sysroot/bin/sh</code>。完成后，按“Ctrl + x”启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rw init=/sysroot/bin/sh</div></pre></td></tr></table></figure></p>
<p>现在就可以使用具有root权限的命令行模式（不输入密码）。<br><img src="http://static.zybuluo.com/danerlt/8zr68w5bfoelsourxcts3kdy/image_1bqf5qsc11m9a7thfuc106e1fgh4m.png" alt="image_1bqf5qsc11m9a7thfuc106e1fgh4m.png-45.2kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单用户模式是Linux操作系统中的运行级别之一，Linux操作系统具有6种运行级别，用于不同的需求或情况。单用户模式主要用于执行清理文件系统，管理配额，恢复文件系统以及恢复丢失的根密码等管理任务。在这种模式下，服务将无法启动，除root以外，不允许任何用户登录，系统也不会要求输入密码进行登录。&lt;br&gt;
    
    </summary>
    
      <category term="运维" scheme="http://litao.work/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Java集合之TreeSet</title>
    <link href="http://litao.work/2017/09/18/Java%E9%9B%86%E5%90%88%E4%B9%8BTreeSet/"/>
    <id>http://litao.work/2017/09/18/Java集合之TreeSet/</id>
    <published>2017-09-18T07:45:30.000Z</published>
    <updated>2017-09-18T07:46:21.582Z</updated>
    
    <content type="html"><![CDATA[<p>TreeSet简介</p>
<blockquote>
<p>TreeSet 是一个有序的集合，它的作用是提供有序的Set集合。它继承于AbstractSet抽象类，实现了NavigableSet<e>, Cloneable, java.io.Serializable接口。<br>TreeSet 继承于AbstractSet，所以它是一个Set集合，具有Set的属性和方法。<br>TreeSet 实现了NavigableSet接口，意味着它支持一系列的导航方法。比如查找与指定目标最匹配项。<br>TreeSet 实现了Cloneable接口，意味着它能被克隆。<br>TreeSet 实现了java.io.Serializable接口，意味着它支持序列化。</e></p>
</blockquote>
<a id="more"></a>
<p>TreeSet是基于TreeMap实现的。TreeSet中的元素支持2种排序方式：自然排序 或者 根据创建TreeSet 时提供的 Comparator 进行排序。这取决于使用的构造方法。<br>TreeSet为基本操作（add、remove 和 contains）提供受保证的 log(n) 时间开销。<br>另外，TreeSet是非同步的。 它的iterator 方法返回的迭代器是fail-fast的。</p>
<h2 id="TreeSet的构造函数"><a href="#TreeSet的构造函数" class="headerlink" title="TreeSet的构造函数"></a>TreeSet的构造函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 默认构造函数。使用该构造函数，TreeSet中的元素按照自然排序进行排列。</div><div class="line">TreeSet()</div><div class="line"></div><div class="line">// 创建的TreeSet包含collection</div><div class="line">TreeSet(Collection&lt;? extends E&gt; collection)</div><div class="line"></div><div class="line">// 指定TreeSet的比较器</div><div class="line">TreeSet(Comparator&lt;? super E&gt; comparator)</div><div class="line"></div><div class="line">// 创建的TreeSet包含set</div><div class="line">TreeSet(SortedSet&lt;E&gt; set)</div></pre></td></tr></table></figure>
<h2 id="TreeSet的API"><a href="#TreeSet的API" class="headerlink" title="TreeSet的API"></a>TreeSet的API</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">boolean                   add(E object)</div><div class="line">boolean                   addAll(Collection&lt;? extends E&gt; collection)</div><div class="line">void                      clear()</div><div class="line">Object                    clone()</div><div class="line">boolean                   contains(Object object)</div><div class="line">E                         first()</div><div class="line">boolean                   isEmpty()</div><div class="line">E                         last()</div><div class="line">E                         pollFirst()</div><div class="line">E                         pollLast()</div><div class="line">E                         lower(E e)</div><div class="line">E                         floor(E e)</div><div class="line">E                         ceiling(E e)</div><div class="line">E                         higher(E e)</div><div class="line">boolean                   remove(Object object)</div><div class="line">int                       size()</div><div class="line">Comparator&lt;? super E&gt;     comparator()</div><div class="line">Iterator&lt;E&gt;               iterator()</div><div class="line">Iterator&lt;E&gt;               descendingIterator()//以降序返回该集合中的元素的迭代器</div><div class="line">SortedSet&lt;E&gt;              headSet(E end)//返回小于end的部分</div><div class="line">NavigableSet&lt;E&gt;           descendingSet()//返回此集合中包含的元素的反向排序视图</div><div class="line">NavigableSet&lt;E&gt;           headSet(E end, boolean endInclusive)//返回元素小于（或等于，包含值为true）end的该集合的部分视图</div><div class="line">SortedSet&lt;E&gt;              subSet(E start, E end)</div><div class="line">NavigableSet&lt;E&gt;           subSet(E start, boolean startInclusive, E end, boolean endInclusive)</div><div class="line">NavigableSet&lt;E&gt;           tailSet(E start, boolean startInclusive)</div><div class="line">SortedSet&lt;E&gt;              tailSet(E start)返回该集合的元素大于或等于start的部分的视图。</div></pre></td></tr></table></figure>
<blockquote>
<p>转载自：<a href="http://www.cnblogs.com/skywang12345/admin/EditPosts.aspx?postid=3311268" target="_blank" rel="external">http://www.cnblogs.com/skywang12345/admin/EditPosts.aspx?postid=3311268</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TreeSet简介&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TreeSet 是一个有序的集合，它的作用是提供有序的Set集合。它继承于AbstractSet抽象类，实现了NavigableSet&lt;E&gt;, Cloneable, java.io.Serializable接口。&lt;br&gt;TreeSet 继承于AbstractSet，所以它是一个Set集合，具有Set的属性和方法。&lt;br&gt;TreeSet 实现了NavigableSet接口，意味着它支持一系列的导航方法。比如查找与指定目标最匹配项。&lt;br&gt;TreeSet 实现了Cloneable接口，意味着它能被克隆。&lt;br&gt;TreeSet 实现了java.io.Serializable接口，意味着它支持序列化。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="http://litao.work/tags/java/"/>
    
      <category term="java集合" scheme="http://litao.work/tags/java%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Route命令</title>
    <link href="http://litao.work/2017/09/15/route%E5%91%BD%E4%BB%A4/"/>
    <id>http://litao.work/2017/09/15/route命令/</id>
    <published>2017-09-15T09:57:00.000Z</published>
    <updated>2017-09-15T10:01:13.435Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在/etc/rc.local中添加route命令来保证该路由设置永久有效。<br><a id="more"></a><br>转自<a href="http://www.cnblogs.com/peida/archive/2013/03/05/2943698.html" target="_blank" rel="external">每天一个linux命令（53）：route命令</a><br>1．命令格式：<br>route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]]<br>2．命令功能：<br>Route命令是用于操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主机或者一个网络通过一个网络接口，如eth0。当使用”add”或者”del”参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。<br>3．命令参数：<br>-c 显示更多信息<br>-n 不解析名字<br>-v 显示详细的处理信息<br>-F 显示发送信息<br>-C 显示路由缓存<br>-f 清除所有网关入口的路由表。<br>-p 与 add 命令一起使用时使路由具有永久性。</p>
</blockquote>
<p>add:添加一条新路由。<br>del:删除一条路由。<br>-net:目标地址是一个网络。<br>-host:目标地址是一个主机。<br>netmask:当添加一个网络路由时，需要使用网络掩码。<br>gw:路由数据包通过网关。注意，你指定的网关必须能够达到。<br>metric：设置路由跳数。<br>Command 指定您想运行的命令 (Add/Change/Delete/Print)。<br>Destination 指定该路由的网络目标。<br>mask Netmask 指定与网络目标相关的网络掩码（也被称作子网掩码）。<br>Gateway 指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。<br>metric Metric 为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。<br>if Interface 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。<br>4．使用实例：<br>实例1：显示当前路由<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route</div><div class="line">route -n</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">e192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route -n</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">0.0.0.0         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div></pre></td></tr></table></figure></p>
<p>说明：<br>第一行表示主机所在网络的地址为192.168.120.0，若数据传送目标是在本局域网内通信，则可直接通过eth0转发数据包;<br>第四行表示数据传送目的是访问Internet，则由接口eth0，将数据包发送到网关192.168.120.240<br>其中Flags为路由标志，标记当前网络节点的状态。<br>Flags标志说明：<br>U Up表示此路由当前为启动状态<br>H Host，表示此网关为一主机<br>G Gateway，表示此网关为一路由器<br>R Reinstate Route，使用动态路由重新初始化的路由<br>D Dynamically,此路由是动态性地写入<br>M Modified，此路由是由路由守护程序或导向器动态修改<br>! 表示此路由当前为关闭状态<br>备注：<br>route -n (-n 表示不解析名字,列出速度会比route 快)<br>实例2：添加网关/设置网关<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
<p>说明：<br>增加一条 到达244.0.0.0的路由<br>实例3：屏蔽一条路由<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">route add -net 224.0.0.0 netmask 240.0.0.0 reject</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route add -net 224.0.0.0 netmask 240.0.0.0 reject</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div></pre></td></tr></table></figure></p>
<p>说明：<br>增加一条屏蔽的路由，目的地址为 224.x.x.x 将被拒绝<br>实例4：删除路由记录<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route del -net 224.0.0.0 netmask 240.0.0.0</div><div class="line">route del -net 224.0.0.0 netmask 240.0.0.0 reject</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">224.0.0.0       *               240.0.0.0       U     0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">224.0.0.0       -               240.0.0.0       !     0      -        0 -</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route del -net 224.0.0.0 netmask 240.0.0.0 reject</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
<p>说明：<br>实例5：删除和添加设置默认网关<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route del default gw 192.168.120.240</div><div class="line">route add default gw 192.168.120.240</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# route del default gw 192.168.120.240</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">[root@localhost ~]# route add default gw 192.168.120.240</div><div class="line">[root@localhost ~]# route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">192.168.120.0   *               255.255.255.0   U     0      0        0 eth0</div><div class="line">192.168.0.0     192.168.120.1   255.255.0.0     UG    0      0        0 eth0</div><div class="line">10.0.0.0        192.168.120.1   255.0.0.0       UG    0      0        0 eth0</div><div class="line">default         192.168.120.240 0.0.0.0         UG    0      0        0 eth0</div><div class="line">[root@localhost ~]#</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Linux系统的route命令用于显示和操作IP路由表（show / manipulate the IP routing table）。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。在Linux系统中，设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的IP地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在/etc/rc.local中添加route命令来保证该路由设置永久有效。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="转载" scheme="http://litao.work/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Win10和deepin双系统时间差8小时解决方案</title>
    <link href="http://litao.work/2017/09/08/Win10%E5%92%8Cdeepin%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%B7%AE8%E5%B0%8F%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://litao.work/2017/09/08/Win10和deepin双系统时间差8小时解决方案/</id>
    <published>2017-09-08T02:58:15.000Z</published>
    <updated>2017-09-08T00:48:54.272Z</updated>
    
    <content type="html"><![CDATA[<p>在电脑中同时安装Windows和Linux操作系统时，可能会发生系统时间不一致的现象。以北京时间为例，两者相差8小时。<br><a id="more"></a><br>Linux系统会将UTC时间写入到了BIOS时钟内，在运行时会根据当前时区计算出本地时间。例如，如果UTC时间为7月1日0点0分，系统时区设置为东8区的Asia/Harbin，那么Linux系统的实际显示时间会是7月1日8点0分。</p>
<p>Windows系统将本地时间写入到了BIOS时钟内，在运行时直接显示本地时间。</p>
<p>所以安装Linux后，两个系统会有时间差。对于Windows 10  来讲，可以通过修改注册表的方法使Windows将BIOS时间识别为UTC时间。</p>
<p>按下win+R输入<code>regedit</code>打开注册表，找到下面这一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation</div></pre></td></tr></table></figure></p>
<p>键，在其下面新建DWORD 32bit类型的项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RealTimeIsUniversal</div></pre></td></tr></table></figure></p>
<p>设置其值为1，保存后退出，重新系统即可。</p>
<p><img src="http://static.zybuluo.com/danerlt/umebq8w7wgy32l2kq2bv8ilf/image_1bpertpkp17vh4v31ica189i9ne9.png" alt="images"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在电脑中同时安装Windows和Linux操作系统时，可能会发生系统时间不一致的现象。以北京时间为例，两者相差8小时。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="solution" scheme="http://litao.work/tags/solution/"/>
    
      <category term="windows" scheme="http://litao.work/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next添加访客量</title>
    <link href="http://litao.work/2017/08/30/hexo-next%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E9%87%8F/"/>
    <id>http://litao.work/2017/08/30/hexo-next添加访客量/</id>
    <published>2017-08-30T10:15:16.000Z</published>
    <updated>2017-08-30T10:17:40.502Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转载自：Jey Zhang :<a href="http://www.jeyzhang.com/hexo-next-add-post-views.html" target="_blank" rel="external">Hexo的NexT主题个性化：添加文章阅读量</a></p>
</blockquote>
<p>关于Hexo的文章阅读量设置问题，大多数人都是使用<a href="http://service.ibruce.info/" target="_blank" rel="external">不蒜子</a>的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。<br><a id="more"></a><br>下面介绍如何在首页及文章页面都显示<code>文章的阅读量</code>，显示效果如下：</p>
<p><img src="http://i.imgur.com/AMdIdpW.png" alt=""></p>
<hr>
<h2 id="配置LeanCloud"><a href="#配置LeanCloud" class="headerlink" title="配置LeanCloud"></a><strong>配置<a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud</a></strong></h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>打开LeanCloud官网，进入<a href="https://leancloud.cn/login.html#/signup" target="_blank" rel="external">注册页面</a>注册。完成邮箱激活后，点击头像，进入<code>控制台</code>页面，如下：</p>
<p><img src="http://i.imgur.com/WyRLYr3.png" alt=""></p>
<h3 id="创建新应用"><a href="#创建新应用" class="headerlink" title="创建新应用"></a>创建新应用</h3><p>创建一个新应用(类型为<code>JavaScript SDK</code>)，点击应用进入；</p>
<p>创建名称为<code>Counter</code>的Class</p>
<p><img src="http://i.imgur.com/5VUiBAy.png" alt=""></p>
<p><img src="http://i.imgur.com/C8LWKT2.png" alt=""></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>编辑网站根目录下的<code>_config.yml</code>文件，添加如下：</p>
<pre><code># add post views
leancloud_visitors:
  enable: true
  app_id: **你的app_id**
  app_key: **你的app_key**
</code></pre><p>其中，app_id和app_key在你所创建的应用的<code>设置-&gt;应用Key</code>中。</p>
<h3 id="Web安全性"><a href="#Web安全性" class="headerlink" title="Web安全性"></a>Web安全性</h3><p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在<code>应用-&gt;设置-&gt;安全中心</code>的<code>Web安全域名</code>中加入自己的博客域名，以保证数据的调用安全。</p>
<h2 id="修改NexT主题文件"><a href="#修改NexT主题文件" class="headerlink" title="修改NexT主题文件"></a><strong>修改NexT主题文件</strong></h2><h3 id="添加lean-analytics-swig文件"><a href="#添加lean-analytics-swig文件" class="headerlink" title="添加lean-analytics.swig文件"></a>添加lean-analytics.swig文件</h3><p>在主题目录下的<code>\layout\_scripts</code>路径下，新建一个名称为<code>lean-analytics.swig</code>的文件，并添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">&lt;!-- custom analytics part create by xiamo --&gt;</div><div class="line">&lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function showTime(Counter) &#123;</div><div class="line">	var query = new AV.Query(Counter);</div><div class="line">	$(&quot;.leancloud_visitors&quot;).each(function() &#123;</div><div class="line">		var url = $(this).attr(&quot;id&quot;).trim();</div><div class="line">		query.equalTo(&quot;url&quot;, url);</div><div class="line">		query.find(&#123;</div><div class="line">			success: function(results) &#123;</div><div class="line">				if (results.length == 0) &#123;</div><div class="line">					var content = &apos;0 &apos; + $(document.getElementById(url)).text();</div><div class="line">					$(document.getElementById(url)).text(content);</div><div class="line">					return;</div><div class="line">				&#125;</div><div class="line">				for (var i = 0; i &lt; results.length; i++) &#123;</div><div class="line">					var object = results[i];</div><div class="line">					var content = object.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">					$(document.getElementById(url)).text(content);</div><div class="line">				&#125;</div><div class="line">			&#125;,</div><div class="line">			error: function(object, error) &#123;</div><div class="line">				console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message);</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line"></div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">function addCount(Counter) &#123;</div><div class="line">	var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">	url = $(&quot;.leancloud_visitors&quot;).attr(&apos;id&apos;).trim();</div><div class="line">	title = $(&quot;.leancloud_visitors&quot;).attr(&apos;data-flag-title&apos;).trim();</div><div class="line">	var query = new AV.Query(Counter);</div><div class="line">	query.equalTo(&quot;url&quot;, url);</div><div class="line">	query.find(&#123;</div><div class="line">		success: function(results) &#123;</div><div class="line">			if (results.length &gt; 0) &#123;</div><div class="line">				var counter = results[0];</div><div class="line">				counter.fetchWhenSave(true);</div><div class="line">				counter.increment(&quot;time&quot;);</div><div class="line">				counter.save(null, &#123;</div><div class="line">					success: function(counter) &#123;</div><div class="line">						var content =  counter.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">						$(document.getElementById(url)).text(content);</div><div class="line">					&#125;,</div><div class="line">					error: function(counter, error) &#123;</div><div class="line">						console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message);</div><div class="line">					&#125;</div><div class="line">				&#125;);</div><div class="line">			&#125; else &#123;</div><div class="line">				var newcounter = new Counter();</div><div class="line">				newcounter.set(&quot;title&quot;, title);</div><div class="line">				newcounter.set(&quot;url&quot;, url);</div><div class="line">				newcounter.set(&quot;time&quot;, 1);</div><div class="line">				newcounter.save(null, &#123;</div><div class="line">					success: function(newcounter) &#123;</div><div class="line">					    console.log(&quot;newcounter.get(&apos;time&apos;)=&quot;+newcounter.get(&apos;time&apos;));</div><div class="line">						var content = newcounter.get(&apos;time&apos;) + &apos; &apos; + $(document.getElementById(url)).text();</div><div class="line">						$(document.getElementById(url)).text(content);</div><div class="line">					&#125;,</div><div class="line">					error: function(newcounter, error) &#123;</div><div class="line">						console.log(&apos;Failed to create&apos;);</div><div class="line">					&#125;</div><div class="line">				&#125;);</div><div class="line">			&#125;</div><div class="line">		&#125;,</div><div class="line">		error: function(error) &#123;</div><div class="line">			console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line">$(function() &#123;</div><div class="line">	var Counter = AV.Object.extend(&quot;Counter&quot;);</div><div class="line">	if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123;</div><div class="line">		addCount(Counter);</div><div class="line">	&#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123;</div><div class="line">		showTime(Counter);</div><div class="line">	&#125;</div><div class="line">&#125;); </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>其中，控制显示的格式的主要为<code>content</code>变量，按自己的需求相应修改即可。</p>
<h3 id="修改post-swig文件"><a href="#修改post-swig文件" class="headerlink" title="修改post.swig文件"></a>修改post.swig文件</h3><p>在主题的<code>layout\_macro</code>路径下，编辑<code>post.swig</code>文件，找到相应的插入位置（大概在98行左右）：</p>
<p><img src="http://i.imgur.com/l21gZ2f.png" alt=""></p>
<p>插入如下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">&amp;nbsp; | &amp;nbsp;</div><div class="line">&lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">         &amp;nbsp;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125;</div><div class="line">        &lt;/span&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h3 id="修改layout-swig文件"><a href="#修改layout-swig文件" class="headerlink" title="修改layout.swig文件"></a>修改layout.swig文件</h3><p>在主题目录下的<code>layout</code>目录下，编辑<code>_layout.swig</code>文件，在<code>&lt;/body&gt;</code>的上方（大概在70行左右）插入如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">&#123;% include &apos;_scripts/lean-analytics.swig&apos; %&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h3 id="修改语言配置文件"><a href="#修改语言配置文件" class="headerlink" title="修改语言配置文件"></a>修改语言配置文件</h3><p>如果你的网站使用的是英语，则只需要编辑主题目录下的<code>languages\en.yml</code>文件，增加<code>post</code>字段如下：</p>
<pre><code>post:
  sticky: Sticky
  posted: Posted on
  visitors: Views // 增加的字段
  ...
</code></pre><p>如果网站使用的是中文，则编辑<code>languages\zh-Hans.yml</code>文件，相应的增加</p>
<pre><code>post:
  posted: 发表于
  visitors: 阅读次数
  ...
</code></pre><p>其他语言与之类似，将<code>visitors</code>设置成你希望翻译的字段。</p>
<p><strong>最后，重新生成并部署你的网站即可。</strong></p>
<h2 id="增加网站的浏览次数与访客数量统计功能"><a href="#增加网站的浏览次数与访客数量统计功能" class="headerlink" title="增加网站的浏览次数与访客数量统计功能"></a><strong>增加网站的浏览次数与访客数量统计功能</strong></h2><p>网站的浏览次数，即<code>pv</code>；网站的访客数为<code>uv</code>。<code>pv</code>的计算方式是，单个用户连续点击n篇文章，记录n次访问量；<code>uv</code>的计算方式是，单个用户连续点击n篇文章，只记录1次访客数。你可以根据需要添加相应的统计功能。</p>
<h2 id="安装busuanzi-js脚本"><a href="#安装busuanzi-js脚本" class="headerlink" title="安装busuanzi.js脚本"></a>安装<code>busuanzi.js</code>脚本</h2><p>如果你使用的是NexT主题（其他主题类似），打开<code>/theme/next/layout/_partial/footer.swig</code>文件，拷贝下面的代码至文件的开头。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="显示统计标签"><a href="#显示统计标签" class="headerlink" title="显示统计标签"></a>显示统计标签</h2><p>同样编辑<code>/theme/next/layout/_partial/footer.swig</code>文件。</p>
<p>如果你想要显示<code>pv</code>统计量，复制以下代码至你想要放置的位置，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure>
<p>如果你想要显示<code>uv</code>统计量，复制以下代码至你想要放置的位置，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">  本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载自：Jey Zhang :&lt;a href=&quot;http://www.jeyzhang.com/hexo-next-add-post-views.html&quot;&gt;Hexo的NexT主题个性化：添加文章阅读量&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于Hexo的文章阅读量设置问题，大多数人都是使用&lt;a href=&quot;http://service.ibruce.info/&quot;&gt;不蒜子&lt;/a&gt;的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://litao.work/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="hexo" scheme="http://litao.work/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置MySQL</title>
    <link href="http://litao.work/2017/08/30/docker%E9%85%8D%E7%BD%AEMySQL/"/>
    <id>http://litao.work/2017/08/30/docker配置MySQL/</id>
    <published>2017-08-30T09:37:21.000Z</published>
    <updated>2017-08-30T09:45:34.526Z</updated>
    
    <content type="html"><![CDATA[<p>在学习python的时候,看到需要使用mysql数据库,又不想在windows上安装mysql,遂决定使用docker来配置mysql.</p>
<p>参考<a href="https://hub.docker.com/_/mysql/" target="_blank" rel="external">docker mysql 官方说明</a>.<br><a id="more"></a></p>
<h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><p>首先使用 <code>docker pull</code>命令获取镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">C:\Users\tao&gt;docker pull mysql:5.7</div><div class="line">5.7: Pulling from library/mysql</div><div class="line">ad74af05f5a2: Already exists</div><div class="line">0639788facc8: Pull complete</div><div class="line">de70fa77eb2b: Pull complete</div><div class="line">724179e94999: Pull complete</div><div class="line">50c77fb16ba6: Pull complete</div><div class="line">d51f459239fb: Pull complete</div><div class="line">937bbdd4305a: Pull complete</div><div class="line">35369f9634e1: Pull complete</div><div class="line">f6016aab25f1: Pull complete</div><div class="line">5f1901e920da: Pull complete</div><div class="line">fdf808213c5b: Pull complete</div><div class="line">Digest: sha256:96edf37370df96d2a4ee1715cc5c7820a0ec6286551a927981ed50f0273d9b43</div><div class="line">Status: Downloaded newer image for mysql:5.7</div></pre></td></tr></table></figure></p>
<h2 id="启动MySQL服务器实例"><a href="#启动MySQL服务器实例" class="headerlink" title="启动MySQL服务器实例"></a>启动MySQL服务器实例</h2><p>启动MySQL实例很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</div></pre></td></tr></table></figure></p>
<p>其中<code>some-mysql</code>是要分配给容器的名称，<code>my-secret-pw</code>是要为MySQL root用户设置的密码，标签是指定所需MySQL版本的标签。比如说我的数据库名字是<code>test</code>,密码也为<code>test</code>,我就可以像下面这样设.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker run --name test -e MYSQL_ROOT_PASSWORD=test -d mysql:5.7</div></pre></td></tr></table></figure></p>
<h2 id="从另一个Docker容器中的应用程序连接到MySQL"><a href="#从另一个Docker容器中的应用程序连接到MySQL" class="headerlink" title="从另一个Docker容器中的应用程序连接到MySQL"></a>从另一个Docker容器中的应用程序连接到MySQL</h2><p>本镜像会暴露 MySQL 的标准端口 3306，你可以使用 link 功能来让其他应用容器能够访问 MySQL 容器，就像下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name some-app --link some-mysql:mysql -d app-that-uses-mysql</div></pre></td></tr></table></figure></p>
<h2 id="从MySQL命令行客户端连接到MySQL"><a href="#从MySQL命令行客户端连接到MySQL" class="headerlink" title="从MySQL命令行客户端连接到MySQL"></a>从MySQL命令行客户端连接到MySQL</h2><p>以下命令启动另一个mysql容器实例，并对你的原始mysql容器运行mysql命令行，允许您针对数据库实例执行SQL语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker exec -it test mysql -u root -p</div></pre></td></tr></table></figure></p>
<p>输入密码就进入到常见的myssql终端了.<br>![conn mysql comand][1]</p>
<h2 id="使用本地连接MySQL容器"><a href="#使用本地连接MySQL容器" class="headerlink" title="使用本地连接MySQL容器"></a>使用本地连接MySQL容器</h2><p>首先运行MySQL容器，使用<code>-p</code>制定本地端口和容器端口的映射。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name samle-mysql -p 33060:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</div></pre></td></tr></table></figure></p>
<p>然后使用MySQL的<code>-h</code>指定主机，<code>-P</code>指定端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">$ mysql -h 0.0.0.0 -P 33060 -u root -p </div><div class="line">Enter password: </div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 5</div><div class="line">Server version: 5.7.19 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; create database test;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| sys                |</div><div class="line">| test               |</div><div class="line">+--------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; use test;</div><div class="line">Database changed</div><div class="line">mysql&gt; show tables;</div><div class="line">Empty set (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>使用<code>docker exec</code>运行MySQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ docker exec -it samle-mysql mysql -u root -p</div><div class="line">Enter password: </div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 7</div><div class="line">Server version: 5.7.19 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| sys                |</div><div class="line">| test               |</div><div class="line">+--------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; use test;</div><div class="line">Database changed</div><div class="line">mysql&gt; create table hello(id int);</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
<p>再回到Linux终端，查看table是否增加就可以看出本地连接MySQL容器就成功了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show tables;</div><div class="line">+----------------+</div><div class="line">| Tables_in_test |</div><div class="line">+----------------+</div><div class="line">| hello          |</div><div class="line">+----------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习python的时候,看到需要使用mysql数据库,又不想在windows上安装mysql,遂决定使用docker来配置mysql.&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;https://hub.docker.com/_/mysql/&quot;&gt;docker mysql 官方说明&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="mysql" scheme="http://litao.work/tags/mysql/"/>
    
      <category term="docker" scheme="http://litao.work/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装配置</title>
    <link href="http://litao.work/2017/08/30/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://litao.work/2017/08/30/docker笔记/</id>
    <published>2017-08-30T08:21:02.000Z</published>
    <updated>2017-08-30T08:25:48.296Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。<br><a id="more"></a></p>
<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>官方网站上有各种环境下的 <a href="https://docs.docker.com/installation/#installation" target="_blank" rel="external">安装指南</a></p>
<h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><p>阿里云的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure></p>
</blockquote>
<p>DaoCloud 的安装脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/docker | sh</div></pre></td></tr></table></figure></p>
<h3 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h3><p>国内访问 Docker Hub 有时会遇到困难，此时可以配置镜像加速器。国内很多云服务商都提供了加速器服务，例如：</p>
<ul>
<li>阿里云加速器</li>
<li>DaoCloud 加速器</li>
<li>灵雀云加速器</li>
</ul>
<p>注册用户并且申请加速器，会获得如 <a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a> 这样的地址。我们需要将其配置给 Docker 引擎。</p>
<h4 id="Ubuntu-14-04、Debian-7-Wheezy"><a href="#Ubuntu-14-04、Debian-7-Wheezy" class="headerlink" title="Ubuntu 14.04、Debian 7 Wheezy"></a>Ubuntu 14.04、Debian 7 Wheezy</h4><p>对于使用 <strong>upstart</strong> 的系统而言，编辑 <code>/etc/default/docker</code> 文件，在其中的 DOCKER_OPTS 中添加获得的加速器配置 –registry-mirror=&lt;加速器地址&gt;，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DOCKER_OPTS=&quot;--registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com&quot;</div></pre></td></tr></table></figure>
<p>重新启动服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo service docker restart</div></pre></td></tr></table></figure></p>
<h4 id="Ubuntu-16-04、Debian-8-Jessie、CentOS-7"><a href="#Ubuntu-16-04、Debian-8-Jessie、CentOS-7" class="headerlink" title="Ubuntu 16.04、Debian 8 Jessie、CentOS 7"></a>Ubuntu 16.04、Debian 8 Jessie、CentOS 7</h4><p>对于使用 <strong>systemd</strong> 的系统，用 <code>systemctl enable docker</code> 启用服务后，编辑 <code>/etc/systemd/system/multi-user.target.wants/docker.service</code> 文件，找到 <code>ExecStart=</code> 这一行，在这行最后添加加速器地址 <code>--registry-mirror=&lt;加速器地址&gt;</code>，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecStart=/usr/bin/dockerd --registry-mirror=https://xxxxxxxxxxx.mirror.aliyuncs.com</div></pre></td></tr></table></figure></p>
<p>注：对于 1.12 以前的版本，dockerd 换成 docker daemon。</p>
<p>重新加载配置并且重新启动。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo systemctl daemon-reload</div><div class="line">$ sudo systemctl restart docker</div></pre></td></tr></table></figure></p>
<h4 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h4><p>对于使用 WINDOWS 10 的系统，在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写如阿里云、DaoCloud之类的加速器地址，如：</p>
<p>{<br>  “registry-mirrors”: [<br>    “<a href="https://xxxxxxxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxxxxxxx.mirror.aliyuncs.com</a>“<br>  ],<br>  “insecure-registries”: []<br>}<br>编辑完成，点击Apply保存后Docker服务会重新启动。</p>
<h2 id="使用镜像"><a href="#使用镜像" class="headerlink" title="使用镜像"></a>使用镜像</h2><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><p>命令: <code>docker pull</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull [选项] [Docker Registry地址]&lt;仓库名&gt;:&lt;标签&gt;</div></pre></td></tr></table></figure></p>
<p>Docker Registry地址：地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub。<br>仓库名：如之前所说，这里的仓库名是两段式名称，既 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像.</p>
<h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p>命令: <code>docker images</code><br>查看结果包含了仓库名、标签、镜像 ID、创建时间以及所占用的空间。</p>
<h3 id="定制镜像"><a href="#定制镜像" class="headerlink" title="定制镜像"></a>定制镜像</h3><p>命令:<code>docker build</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker build [选项] &lt;上下文路径/URL/-&gt;</div></pre></td></tr></table></figure></p>
<p>例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">###注意,下面这种方式要进入到Dockerfile的目录下执行</div><div class="line">docker build -t nginx:v3 .</div><div class="line">docker build https://github.com/twang2218/gitlab-ce-zh.git</div><div class="line">docker build http://server/context.tar.gz</div><div class="line">docker build - &lt; Dockerfile</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Docker是世界领先的软件容器平台。 开发人员使用Docker来消除与同事的代码协作时的“我机器上的工作”问题。 运营商使用Docker在独立的容器中并行运行和管理应用程序，以获得更好的计算密度。 企业使用Docker构建灵活的软件传送流程，可以更快，更安全地发布新功能，并且对于Linux，Windows Server和Linux-on-mainframe应用程序都有信心。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="docker" scheme="http://litao.work/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Ajax笔记</title>
    <link href="http://litao.work/2017/08/30/Ajax%E7%AC%94%E8%AE%B0/"/>
    <id>http://litao.work/2017/08/30/Ajax笔记/</id>
    <published>2017-08-30T08:06:55.000Z</published>
    <updated>2017-08-30T08:16:30.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>参考链接：<br><a href="http://www.jianshu.com/p/a47120678b86#" target="_blank" rel="external">简书橙小张</a></p>
</blockquote>
<p><strong>背景描述：</strong>在浏览器中使用Servlet更新数据时，页面每次都要刷新，用户体验十分不好，随决定学习Ajax来解决这个问题。<br><a id="more"></a></p>
<h2 id="1-什么是Ajax"><a href="#1-什么是Ajax" class="headerlink" title="1.什么是Ajax"></a>1.什么是Ajax</h2><p>AJAX（Asynchronous Javascript And XML）翻译成中文就是“异步Javascript和XML”。即使用Javascript语言与服务器进行异步交互，传输的数据为XML（当然，传输的数据不只是XML）。<br>AJAX还有一个最大的特点就是，当服务器响应时，不用刷新整个浏览器页面，而是可以局部刷新。这一特点给用户的感受是在不知不觉中完成请求和响应过程。<br>它包括：</p>
<ul>
<li>与服务器的异步交互</li>
<li>浏览器的局部刷新<h2 id="2-Ajax工作原理"><a href="#2-Ajax工作原理" class="headerlink" title="2.Ajax工作原理"></a>2.Ajax工作原理</h2>传统web通信<br><img src="http://static.zybuluo.com/danerlt/ms428mcei02q8b4vg37efh9o/image_1b1k4n3r81f9iecbdhl1m4r10s39.png" alt="image_1b1k4n3r81f9iecbdhl1m4r10s39.png-116.3kB"><br>Ajax工作原理<br><img src="http://static.zybuluo.com/danerlt/2ow6jrb4xjwov0zx84boaob2/image_1b1k4np1c74h8m0tir38n2jim.png" alt="image_1b1k4np1c74h8m0tir38n2jim.png-124.2kB"><br>由图中可以看出传统的web通信中，客户端发送一个HTTP请求道服务器，服务器在返回一个新的页面给客户端。而Ajax在返回时返回了多个响应。</li>
</ul>
<h2 id="3-原生JS代码"><a href="#3-原生JS代码" class="headerlink" title="3.原生JS代码"></a>3.原生JS代码</h2><p>其中<code>/ajaxdemo1/Bservlet</code>,就是获取数据的url。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">function createXMLHttpRequest() &#123;</div><div class="line">				try &#123;</div><div class="line">					return new XMLHttpRequest();</div><div class="line">				&#125; catch(e) &#123;</div><div class="line">					try &#123;</div><div class="line">						return new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);</div><div class="line">					&#125; catch(e) &#123;</div><div class="line">						return new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			function check() &#123;</div><div class="line">                var xmlHttp = createXMLHttpRequest();</div><div class="line">                xmlHttp.onreadystatechange = function() &#123;</div><div class="line">                    if(xmlHttp.readyState == 4 &amp;&amp; xmlHttp.status == 200) &#123;</div><div class="line">                        if(xmlHttp.responseText == &quot;true&quot;) &#123;</div><div class="line">                            document.getElementById(&quot;error&quot;).innerHTML = &quot;用户名已被注册！&quot;;</div><div class="line">                        &#125; else &#123;</div><div class="line">                             document.getElementById(&quot;error&quot;).innerHTML = &quot;&quot;;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;;</div><div class="line">                xmlHttp.open(&quot;POST&quot;, &quot;/ajaxdemo1/BServlet&quot;, true);</div><div class="line">                xmlHttp.setRequestHeader(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</div><div class="line">                var username = document.getElementById(&quot;username&quot;).value;</div><div class="line">                xmlHttp.send(&quot;username=&quot; + username);</div><div class="line">			&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/a47120678b86#&quot;&gt;简书橙小张&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;背景描述：&lt;/strong&gt;在浏览器中使用Servlet更新数据时，页面每次都要刷新，用户体验十分不好，随决定学习Ajax来解决这个问题。&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="ajax" scheme="http://litao.work/tags/ajax/"/>
    
      <category term="javaweb" scheme="http://litao.work/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>Python安装配置</title>
    <link href="http://litao.work/2017/08/30/Python%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://litao.work/2017/08/30/Python安装配置/</id>
    <published>2017-08-30T03:56:12.000Z</published>
    <updated>2017-08-30T07:13:46.064Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Python<a href="http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png" target="_blank" rel="external">1</a>  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议<a href="http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png" target="_blank" rel="external">2</a>  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。</p>
</blockquote>
<a id="more"></a>
<h2 id="Python下载"><a href="#Python下载" class="headerlink" title="Python下载"></a>Python下载</h2><p>我们选择安装的Python版本为Python3,首先打开Python的官方网站:<a href="https://www.python.org/" target="_blank" rel="external">https://www.python.org/</a>,就像下面这个样子,鼠标移到<code>Downloads</code>点击<code>Windows</code>:<br><img src="http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png" alt="image_1boodesql175n1mi81r3run6eigm.png-263.6kB"><br>选择<code>3.5.4</code>的版本,下载到本机.<br><img src="http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png" alt="image_1boodncih1ov67131ptsi7i2hb13.png-141kB"></p>
<h2 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h2><p>安装的时候勾选<code>install for all user</code>,高级选项里面全选就行了.然后点击install.<br><img src="http://static.zybuluo.com/danerlt/dgwmbhtm6enhbs3lykkbirem/image_1boojdladhom1jp31r851dcg198k21.png" alt="image_1boojdladhom1jp31r851dcg198k21.png-236.4kB"><br>输入<code>python -V</code>查看版本,输出Python版本说明配置好了.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\litao_sx&gt;python -V</div><div class="line">Python 3.5.4</div></pre></td></tr></table></figure></p>
<h2 id="Python配置"><a href="#Python配置" class="headerlink" title="Python配置"></a>Python配置</h2><h3 id="将PYTHON3-HOME添加到PATH中"><a href="#将PYTHON3-HOME添加到PATH中" class="headerlink" title="将PYTHON3_HOME添加到PATH中"></a>将<code>PYTHON3_HOME</code>添加到<code>PATH</code>中</h3><p>点击<code>我的电脑</code>,右键点击<code>属性</code>,然后点击<code>高级系统设置</code>,然后点击环境变量.<br><img src="http://static.zybuluo.com/danerlt/51d1e26akbq9tgz2d8jp57n0/image_1boojkqnctc71k1erk718a86qo2e.png" alt="image_1boojkqnctc71k1erk718a86qo2e.png-90.9kB"><br><img src="http://static.zybuluo.com/danerlt/6zzhnfwjc1242sezg8edam0p/image_1boojl5r8105511gsqrc1lac1kl22r.png" alt="image_1boojl5r8105511gsqrc1lac1kl22r.png-35kB"><br>新建<code>PYTHON3_HOME</code>环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PYTHON3_HOME</div><div class="line">D:\Program Files\Python35</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/4c8a2kf62oygnkryw4y17lje/image_1boojoa02145n1c2715lvtnv18b38.png" alt="image_1boojoa02145n1c2715lvtnv18b38.png-54.5kB"><br>将环境变量添加到PATH中.将下面的内容添加到PATH的最前面.<br>PS: <code>%PYTHON3_HOME%</code>表示取<code>PYTHON3_HOME</code>环境变量的值,<code>;</code>用来分隔环境变量,一定是英文半角下的分号,写错会运行失败.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%PYTHON3_HOME%;%PYTHON3_HOME%\Scripts;</div></pre></td></tr></table></figure></p>
<h3 id="Python-HelloWorld"><a href="#Python-HelloWorld" class="headerlink" title="Python HelloWorld"></a>Python HelloWorld</h3><p>在命令提示符中输入<code>python</code>,进入交互模式,输入下面代码,Hello World就出来了.输入<code>quit()</code>或者按下<code>Ctrl+Z</code>退出交互模式.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(&apos;Hello World&apos;)</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/b260c7he4tnxcevjzi6o1pq9/image_1book78ammd518pucadqfukp242.png" alt="image_1book78ammd518pucadqfukp242.png-113.6kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Python&lt;a href=&quot;http://static.zybuluo.com/danerlt/gravoqcqtjjbgzsi4gasc9f8/image_1boodesql175n1mi81r3run6eigm.png&quot;&gt;1&lt;/a&gt;  （英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。&lt;br&gt;Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议&lt;a href=&quot;http://static.zybuluo.com/danerlt/pmuqlj6qtahzh3b3hrl49qkw/image_1boodncih1ov67131ptsi7i2hb13.png&quot;&gt;2&lt;/a&gt;  。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="python" scheme="http://litao.work/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Git服务器配置</title>
    <link href="http://litao.work/2017/08/29/Git%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://litao.work/2017/08/29/Git服务器配置/</id>
    <published>2017-08-29T09:43:52.000Z</published>
    <updated>2017-08-29T09:50:31.533Z</updated>
    
    <content type="html"><![CDATA[<p>Github 公开的项目是免费的，但是如果你不想让其他人看到你的项目就需要收费。<br>这时我们就需要自己搭建一台Git服务器作为私有仓库使用。<br>接下来我们将以 Centos 为例搭建 Git 服务器。服务器版本：Centos7.0<br><a id="more"></a></p>
<blockquote>
<p>参考廖雪峰<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000" target="_blank" rel="external">搭建Git服务器</a></p>
</blockquote>
<h2 id="１-建立git用户"><a href="#１-建立git用户" class="headerlink" title="１.建立git用户"></a>１.建立git用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo useradd -m git</div></pre></td></tr></table></figure>
<h2 id="2-创建证书登录"><a href="#2-创建证书登录" class="headerlink" title="2.创建证书登录"></a>2.创建证书登录</h2><p>在git用户文件夹中，创建.ssh文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir .ssh</div></pre></td></tr></table></figure></p>
<p>在<code>.ssh</code>中<code>touch authorized_keys</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>收集所有需要登录的用户的公钥，就是他们自己的<code>id_rsa.pub</code>文件，把所有公钥导入到<code>/home/git/.ssh/authorized_keys</code>文件里，一行一个。<br>可以使用<code>scp</code>命令将本地文件上传到远程服务器上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 将服务器IP地址换成你自己的</div><div class="line">scp .ssh/id_rsa.pub root@IP地址:/home/git/.ssh</div></pre></td></tr></table></figure></p>
<p>然后使用一下命令追加到<code>authorized_keys</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat id_rsa.pub &gt;&gt; authorized_keys</div></pre></td></tr></table></figure></p>
<p>PS：客户端配置git常用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git config --global user.name yourname</div><div class="line">git config --blabal user.email your_email@example.com</div><div class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure></p>
<h2 id="3-禁用shell登录"><a href="#3-禁用shell登录" class="headerlink" title="3.禁用shell登录"></a>3.禁用shell登录</h2><p>出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/bin/bash</div></pre></td></tr></table></figure></p>
<p>改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</div></pre></td></tr></table></figure></p>
<p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p>
<h2 id="5-将服务器IP地址配置在host文件中"><a href="#5-将服务器IP地址配置在host文件中" class="headerlink" title="5.将服务器IP地址配置在host文件中"></a>5.将服务器IP地址配置在<code>host</code>文件中</h2><p>用编辑器编辑<code>/etc/hosts</code>文件，将IP 主机名添加进去。例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">123.123.123.123 server</div></pre></td></tr></table></figure></p>
<h2 id="4-初始化一个git仓库"><a href="#4-初始化一个git仓库" class="headerlink" title="4.初始化一个git仓库"></a>4.初始化一个git仓库</h2><p>先选定一个目录作为Git仓库，假定是<code>/opt</code>，在<code>/opt</code>目录下输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo git init --bare test.git</div></pre></td></tr></table></figure></p>
<p>看到“初始化空的 Git 版本库于 /opt/test.git/”提示说明git仓库创建成功，git会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo chown -R git:git test.git</div></pre></td></tr></table></figure></p>
<h2 id="5-克隆仓库"><a href="#5-克隆仓库" class="headerlink" title="5.克隆仓库"></a>5.克隆仓库</h2><p>server就是hosts文件里面配置与服务器IP对应的主机名，<code>server：</code>后面跟的就是git服务器上的仓库地址绝对路径。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> ~/Desktop  git clone git@server:/opt/test.git</div><div class="line">正克隆到 &apos;test&apos;...</div><div class="line">The authenticity of host &apos;server (123.207.14.144)&apos; can&apos;t be established.</div><div class="line">ECDSA key fingerprint is SHA256:yxZ7puk5qP4H1+ikqIqMcc51j0Y7hm2U8RjlynCZM30.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;server&apos; (ECDSA) to the list of known hosts.</div><div class="line">warning: 您似乎克隆了一个空仓库。</div><div class="line"> ~/Desktop </div></pre></td></tr></table></figure></p>
<h2 id="6-在客户端提交修改"><a href="#6-在客户端提交修改" class="headerlink" title="6.在客户端提交修改"></a>6.在客户端提交修改</h2><p>然后在客户机上新建一个文件test.txt，然后提交，测试提交是否能够成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"> ~/Desktop/test   master  vi test.txt</div><div class="line"> ~/Desktop/test   master  ls</div><div class="line">test.txt</div><div class="line"> ~/Desktop/test   master  git add test.txt</div><div class="line"> ~/Desktop/test   master ✚  git log</div><div class="line">fatal: 您的当前分支 &apos;master&apos; 尚无任何提交</div><div class="line"> ✘  ~/Desktop/test   master ✚  git commit -m &quot;add test.txt&quot; </div><div class="line">[master（根提交） f9c522e] add test.txt</div><div class="line"> 1 file changed, 1 insertion(+)</div><div class="line"> create mode 100644 test.txt</div><div class="line"> ~/Desktop/test   master  git  log</div><div class="line"> commit f9c522ee0e603d715b6e276e077a2e2bc04dac4a</div><div class="line">Author: Lt-grint &lt;1598552894@qq.com&gt;</div><div class="line">Date:   Mon Aug 28 12:07:19 2017 +0800</div><div class="line"></div><div class="line">    add test.txt</div><div class="line">~/Desktop/test   master  git push</div><div class="line">对象计数中: 3, 完成.</div><div class="line">写入对象中: 100% (3/3), 236 bytes | 0 bytes/s, 完成.</div><div class="line">Total 3 (delta 0), reused 0 (delta 0)</div><div class="line">To server:/opt/test.git</div><div class="line"> * [new branch]      master -&gt; master</div></pre></td></tr></table></figure></p>
<h2 id="7-重新clone一次查看是否提交成功"><a href="#7-重新clone一次查看是否提交成功" class="headerlink" title="7.重新clone一次查看是否提交成功"></a>7.重新clone一次查看是否提交成功</h2><p>先在服务器上查看，提交时成功了的。<br><img src="http://static.zybuluo.com/danerlt/zgq005r4xt6mad0ou7xlhfaa/image_1bojgtg029oq1ug1st1g1t13t19.png" alt="image_1bojgtg029oq1ug1st1g1t13t19.png-131.4kB"><br>重新克隆一次，可以看出之前的提交已经成功了，到此git服务器配置已经完成了。接下来就可以愉快的push，pull了。<br> <img src="http://static.zybuluo.com/danerlt/qccrnl81spv7fpxq097xqckn/image_1bojh4i38v5ei0m7u1vm31kk5m.png" alt="image_1bojh4i38v5ei0m7u1vm31kk5m.png-115.5kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 公开的项目是免费的，但是如果你不想让其他人看到你的项目就需要收费。&lt;br&gt;这时我们就需要自己搭建一台Git服务器作为私有仓库使用。&lt;br&gt;接下来我们将以 Centos 为例搭建 Git 服务器。服务器版本：Centos7.0&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://litao.work/categories/linux/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="git" scheme="http://litao.work/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>查找二维数组</title>
    <link href="http://litao.work/2017/06/29/%E6%9F%A5%E6%89%BE%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    <id>http://litao.work/2017/06/29/查找二维数组/</id>
    <published>2017-06-29T01:55:23.000Z</published>
    <updated>2017-08-30T07:15:03.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在一个二维数组中,每一行都按照从到右递增的顺序,每一列都按照从上到下递增的顺序排序.请完成一个函数,输入这样的一个二维数组和一个数组中,是否含有该整数.详情请点击<a href="https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;tqId=11154&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="external">这里</a>.(题目来源牛客网剑指offer).<br><a id="more"></a></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//二维数组</div><div class="line">&#123;1, 2, 8, 9&#125;,</div><div class="line">&#123;2, 4, 9, 12&#125;,</div><div class="line">&#123;4, 7, 10, 13&#125;,</div><div class="line">6, 8, 11, 15&#125;</div><div class="line">//目标数字</div><div class="line">7</div></pre></td></tr></table></figure>
<h3 id="output"><a href="#output" class="headerlink" title="output"></a>output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">true</div></pre></td></tr></table></figure>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p> number从左下角开始,又三种可能的情况:<br>1.number == target,这种情况直接返回true;<br>2.number &lt; target,那么target的范围不可能number的这一列,<br>就在number这一列的右边去找,然后将number的值设为number右边的数,再次比较和target比较<br>3.number &gt; target,那么target的范围不可能number的这一行,<br>就在number这一行的上边去找,然后将number的值设为number上边的数,再次比较和target比较</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public boolean hasNumber(int[][] arr, int target) &#123;</div><div class="line">        boolean found = false;</div><div class="line">        int rows = arr.length;</div><div class="line">        int columns = arr[0].length;</div><div class="line">        if (arr != null &amp;&amp; rows &gt; 0 &amp;&amp; columns &gt; 0) &#123;</div><div class="line">            int row = rows - 1;</div><div class="line">            int column = 0;</div><div class="line"></div><div class="line">            while (row &gt;= 0 &amp;&amp; column &lt; columns) &#123;</div><div class="line">                int number = arr[row][column];//起始位置为左下角的值.</div><div class="line">                if (number == target) &#123;</div><div class="line">                    found = true;</div><div class="line">                    break;</div><div class="line">                &#125; else if (number &lt; target) &#123;</div><div class="line">                    ++column;</div><div class="line">                &#125; else &#123;</div><div class="line">                    --row;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return found;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="代码详细源码"><a href="#代码详细源码" class="headerlink" title="代码详细源码"></a>代码详细源码</h2><p>也可在<a href="https://github.com/Lt-grint/offer-java/blob/master/src/offer/Example03.java" target="_blank" rel="external">这里</a>查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">package offer;</div><div class="line"></div><div class="line"></div><div class="line">import org.junit.Test;</div><div class="line"></div><div class="line">import static org.junit.Assert.*;</div><div class="line"></div><div class="line">/**</div><div class="line"> * @describute 題目描述：</div><div class="line"> * 在一个二维数组中,每一行都按照从到右递增的顺序,</div><div class="line"> * 每一列都按照从上到下递增的顺序排序.请完成一个函数,输入</div><div class="line"> * 这样的一个二维数组和一个数组中,是否含有该整数.</div><div class="line"> * &lt;p&gt;</div><div class="line"> * 解题思路:</div><div class="line"> * number从左下角开始,又三种可能的情况:</div><div class="line"> * 1.number == target,这种情况直接返回true;</div><div class="line"> * 2.number &lt; target,那么target的范围不可能number的这一列,</div><div class="line"> * 就在number这一列的右边去找,然后将number的值设为number右边的数,再次比较和target比较</div><div class="line"> * 3.number &gt; target,那么target的范围不可能number的这一行,</div><div class="line"> * 就在number这一行的上边去找,然后将number的值设为number上边的数,再次比较和target比较</div><div class="line"> * Created by danerlt on 17-6-28.</div><div class="line"> */</div><div class="line">public class Example03 &#123;</div><div class="line">    public boolean hasNumber(int[][] arr, int target) &#123;</div><div class="line">        boolean found = false;</div><div class="line">        int rows = arr.length;</div><div class="line">        int columns = arr[0].length;</div><div class="line">        if (arr != null &amp;&amp; rows &gt; 0 &amp;&amp; columns &gt; 0) &#123;</div><div class="line">            int row = rows - 1;</div><div class="line">            int column = 0;</div><div class="line"></div><div class="line">            while (row &gt;= 0 &amp;&amp; column &lt; columns) &#123;</div><div class="line">                int number = arr[row][column];//起始位置为左下角的值.</div><div class="line">                if (number == target) &#123;</div><div class="line">                    found = true;</div><div class="line">                    break;</div><div class="line">                &#125; else if (number &lt; target) &#123;</div><div class="line">                    ++column;</div><div class="line">                &#125; else &#123;</div><div class="line">                    --row;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return found;</div><div class="line">    &#125;</div><div class="line">    @Test</div><div class="line">    public void testHasNumber () &#123;</div><div class="line">        int[][] arr = new int[][]&#123;</div><div class="line">                &#123;1, 2, 8, 9&#125;,</div><div class="line">                &#123;2, 4, 9, 12&#125;,</div><div class="line">                &#123;4, 7, 10, 13&#125;,</div><div class="line">                &#123;6, 8, 11, 15&#125;</div><div class="line">        &#125;;</div><div class="line">        assertTrue(hasNumber(arr, 15));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Test</div><div class="line">    public void testHasNotNumber () &#123;</div><div class="line">        int[][] arr = new int[][]&#123;</div><div class="line">                &#123;1, 2, 8, 9&#125;,</div><div class="line">                &#123;2, 4, 9, 12&#125;,</div><div class="line">                &#123;4, 7, 10, 13&#125;,</div><div class="line">                &#123;6, 8, 11, 15&#125;</div><div class="line">        &#125;;</div><div class="line">        assertFalse(hasNumber(arr, 5));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;在一个二维数组中,每一行都按照从到右递增的顺序,每一列都按照从上到下递增的顺序排序.请完成一个函数,输入这样的一个二维数组和一个数组中,是否含有该整数.详情请点击&lt;a href=&quot;https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;amp;tqId=11154&amp;amp;tPage=1&amp;amp;rp=1&amp;amp;ru=/ta/coding-interviews&amp;amp;qru=/ta/coding-interviews/question-ranking&quot;&gt;这里&lt;/a&gt;.(题目来源牛客网剑指offer).&lt;br&gt;
    
    </summary>
    
      <category term="刷题" scheme="http://litao.work/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="剑指offer" scheme="http://litao.work/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>IDEA使用Maven构建Java Web项目</title>
    <link href="http://litao.work/2017/05/12/IDEA%E4%BD%BF%E7%94%A8Maven%E6%9E%84%E5%BB%BAJava-Web%E9%A1%B9%E7%9B%AE/"/>
    <id>http://litao.work/2017/05/12/IDEA使用Maven构建Java-Web项目/</id>
    <published>2017-05-12T04:35:30.000Z</published>
    <updated>2017-08-30T07:15:28.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-打开IDEA"><a href="#1-打开IDEA" class="headerlink" title="1.打开IDEA"></a>1.打开IDEA</h2><p>点击<code>create new project</code>,在左侧选择Maven,然后勾选<code>create from archetype</code>,然后点击<code>maven-archetype-webapp</code>,如图1,2,3,然后点击next.</p>
<p><img src="http://static.zybuluo.com/danerlt/o4iy8fiqsdi6y4x330g72mys/image_1bfta2fdv2ac1q1u1t0hl4unv9.png" alt="create new project"><br><a id="more"></a><br><img src="http://static.zybuluo.com/danerlt/han82isrlxo262ai7n91wg6w/image_1bftab91r43c1ijl6a1iju1f6813.png" alt="image_1bftab91r43c1ijl6a1iju1f6813.png-96kB"></p>
<h2 id="2-填写maven项目的groupId-artifactId-version"><a href="#2-填写maven项目的groupId-artifactId-version" class="headerlink" title="2.填写maven项目的groupId,artifactId,version."></a>2.填写maven项目的groupId,artifactId,version.</h2><p>其中groupId一般是公司域名的反写,artifactId一般是项目名-模块名,version表示版本,snapshot是快照的意思.<br><img src="http://static.zybuluo.com/danerlt/j90u3jd62iu6wldwuinxjn8p/image_1bftadg19e51bvj37617pr1lqj1g.png" alt="image_1bftadg19e51bvj37617pr1lqj1g.png-27.5kB"></p>
<h2 id="3-配置maven"><a href="#3-配置maven" class="headerlink" title="3.配置maven"></a>3.配置maven</h2><p>1表示的是maven的安装目录,2表示的是maven的setting文件,在maven安装目录下的<code>conf</code>目录下,3表示的是maven的仓库地址,默认为<code>C:\Users\username</code>目录下的<code>.m2</code>目录下.<br><img src="http://static.zybuluo.com/danerlt/c306srof2nn4gypkpxfh7nip/image_1bftakrnm1vhu1evv3findl1hcr1t.png" alt="image_1bftakrnm1vhu1evv3findl1hcr1t.png-42.9kB"></p>
<h2 id="4-配置project"><a href="#4-配置project" class="headerlink" title="4.配置project"></a>4.配置project</h2><p>输入项目名,项目在本地的路径然后点击finsh就ok了.<br><img src="http://static.zybuluo.com/danerlt/n90zqprs8rkmxcn7rrxgs3h3/image_1bftbrt6n1vhp9uh11tu168612fb2a.png" alt="image_1bftbrt6n1vhp9uh11tu168612fb2a.png-32.4kB"></p>
<h2 id="5-maven自动导包"><a href="#5-maven自动导包" class="headerlink" title="5.maven自动导包"></a>5.maven自动导包</h2><p><img src="http://static.zybuluo.com/danerlt/0tkdho13yikauadw5lrwakwo/image_1bftc2o7fv3l1rarhu41tfid182n.png" alt="image_1bftc2o7fv3l1rarhu41tfid182n.png-138.9kB"></p>
<h2 id="6-新建java目录和test目录"><a href="#6-新建java目录和test目录" class="headerlink" title="6.新建java目录和test目录"></a>6.新建java目录和test目录</h2><p>默认情况下<code>src</code>目录下没有<code>java</code>目录和<code>test</code>目录,如有必要还需要新建<code>resours</code>目录我们需要手动建立,建好之后还需要配置一下.按下<code>Ctrl+Shift+Alt+S</code>快捷键或者点击<code>File-&gt;Project Structure</code>.<br><img src="http://static.zybuluo.com/danerlt/2p9ecqp1lyx6h7byyw9bkuoq/image_1bftg00ngivi1mj21dnv1ngj5ng6p.png" alt="image_1bftg00ngivi1mj21dnv1ngj5ng6p.png-16.7kB"><br>点击Moudle,如图1,然后点击Sources,选中目录,然后点击对应的3,4,5,6.<br><code>java</code>目录对应<code>Sources</code>,<code>test</code>目录对应<code>Tests</code>,<code>java</code>目录下的<code>resources</code>对应<code>Resources</code>,<code>test</code>目录下的<code>resources</code>对应<code>Test Resources</code>.<br><img src="http://static.zybuluo.com/danerlt/yhzk54x873mqq2mp0vnbwx7q/image_1bftci552917rjp15vg1s4v453u.png" alt="image_1bftci552917rjp15vg1s4v453u.png-85.3kB"></p>
<h2 id="7-配置tomcat"><a href="#7-配置tomcat" class="headerlink" title="7.配置tomcat"></a>7.配置tomcat</h2><p>先选择tomcat的版本,<br><img src="http://static.zybuluo.com/danerlt/rwm5m7v3amhq5fhg7ju3pmqx/image_1bftec89sjh3cdoa11mgl1l1l4b.png" alt="image_1bftec89sjh3cdoa11mgl1l1l4b.png-71.6kB"><br>然后点击deployment,点击加号,选择artifacts.选择后缀为exploded,<br><img src="http://static.zybuluo.com/danerlt/h8ejz2kciq0ckx3b0wjqmebf/image_1bftef11j11oq1d591uu8m0h1gki4o.png" alt="image_1bftef11j11oq1d591uu8m0h1gki4o.png-17.1kB"><br>然后点击编辑,这里可以修改发布的位置,可以选择tomcat的webapp目录<br><img src="http://static.zybuluo.com/danerlt/27q917n4cshxjoq0uw6zo2h8/image_1bftek8vdnu5e811nm6cpgmva55.png" alt="image_1bftek8vdnu5e811nm6cpgmva55.png-67.5kB"><br>然后将箭头指的位置改为<code>Updata classes and resources</code><br><img src="http://static.zybuluo.com/danerlt/7lq95th7pchdklaksd4h2snx/image_1bften1vv1pa21sl7sq21l8t1pko5i.png" alt="image_1bften1vv1pa21sl7sq21l8t1pko5i.png-70.4kB"></p>
<h2 id="8-测试是否配置成功"><a href="#8-测试是否配置成功" class="headerlink" title="8.测试是否配置成功"></a>8.测试是否配置成功</h2><p>在webapp目录下的index.jsp添加一些内容,点击debug,浏览器自动打开如下就可以了<br><img src="http://static.zybuluo.com/danerlt/ar1v983yq6y7h6zfc4hxpgmc/image_1bftetdeg1kb2g1ser31a1m6sa5v.png" alt="image_1bftetdeg1kb2g1ser31a1m6sa5v.png-82kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-打开IDEA&quot;&gt;&lt;a href=&quot;#1-打开IDEA&quot; class=&quot;headerlink&quot; title=&quot;1.打开IDEA&quot;&gt;&lt;/a&gt;1.打开IDEA&lt;/h2&gt;&lt;p&gt;点击&lt;code&gt;create new project&lt;/code&gt;,在左侧选择Maven,然后勾选&lt;code&gt;create from archetype&lt;/code&gt;,然后点击&lt;code&gt;maven-archetype-webapp&lt;/code&gt;,如图1,2,3,然后点击next.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://static.zybuluo.com/danerlt/o4iy8fiqsdi6y4x330g72mys/image_1bfta2fdv2ac1q1u1t0hl4unv9.png&quot; alt=&quot;create new project&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="javaweb" scheme="http://litao.work/tags/javaweb/"/>
    
      <category term="idea" scheme="http://litao.work/tags/idea/"/>
    
      <category term="maven" scheme="http://litao.work/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Centos安装oracle 11g(二)</title>
    <link href="http://litao.work/2017/03/30/centos%E5%AE%89%E8%A3%85oracle-11g-%E4%BA%8C/"/>
    <id>http://litao.work/2017/03/30/centos安装oracle-11g-二/</id>
    <published>2017-03-29T17:06:08.000Z</published>
    <updated>2017-08-30T07:28:00.863Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装Oracle 11g(一)</title>
    <link href="http://litao.work/2017/03/30/centos%E5%AE%89%E8%A3%85Oracle-11g-%E4%B8%80/"/>
    <id>http://litao.work/2017/03/30/centos安装Oracle-11g-一/</id>
    <published>2017-03-29T16:57:29.000Z</published>
    <updated>2017-08-30T07:26:15.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>写这个文档一是为了记录下自己安装Oracle和配置的一些步骤，以备以后查看，二是在安装文档时找不到一般比较好的中文版介绍，安装时参考的<a href="https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1" target="_blank" rel="external">https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1</a>,文档只要安装时的命令，没有截图，我加上了大部分命令运行的截图。</p>
<p><strong>注意:本文主要讲解到图形化安装前的配置,因为Oracle安装需要使用256位的图像显示,所以图形化界面的安装请戳<a href="https://www.baidu.com" target="_blank" rel="external">这里</a>.</strong><br><a id="more"></a><br>在CentOS7 64位上安装Oracle 11g数据库，首先验证系统<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hostnamectl</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/0iff1p5gakqmxr0j0uvy6zh1/image_1bcamf2a6uig10rt5ea1f7ojnr26.png" alt="image_1bcamf2a6uig10rt5ea1f7ojnr26.png-39.4kB"></p>
<h2 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h2><p>当操作系统被成功安装后，要记得验证和登记在你的DNS主机名。另外加上你的主机名或<code>IP</code>和<code>/etc/hosts</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/hostname</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/lanvwz6s4rdcggqeaihkydla/image_1bcamt09dujec8bdj994ssg033.png" alt="image_1bcamt09dujec8bdj994ssg033.png-9.8kB"><br>离开SELinux执行模式以及防火墙启用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sestatus</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/m8l19svgazt5hhoi6nhtcnbq/image_1bcan0euiigdqa3189914kimc03g.png" alt="image_1bcan0euiigdqa3189914kimc03g.png-25.2kB"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --state</div></pre></td></tr></table></figure></p>
<p>升级CentOS系统上过时的包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum update -y</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/pyhc2srz7jw8s68aeimtqc2f/image_1bcaso72qimdrjj1uvt1mc5o76cc.png" alt="image_1bcaso72qimdrjj1uvt1mc5o76cc.png-42.9kB"><br>下载linux x86-64版本的Oracle 11g数据库</p>
<blockquote>
<p><a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html" target="_blank" rel="external">http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html</a></p>
<h2 id="安装前配置-1"><a href="#安装前配置-1" class="headerlink" title="安装前配置"></a>安装前配置</h2><p>创建用户组oinstall和dba并且创建用户oracle，将其加入到oinstall组中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">groupadd oinstall</div><div class="line">groupadd dba</div><div class="line">useradd -g oinstall -G dba oracle</div><div class="line">passwd oracle</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://static.zybuluo.com/danerlt/z9t9nit8xh84sstvvg1504b6/image_1bcdd0m9ancr1dtl1jfjqb1j659.png" alt="创建用户组和用户"><br><img src="http://static.zybuluo.com/danerlt/npj6ejb04a3vld5opgr8hmy4/image_1bcdd1epq8qp1aih197k3h0hcg1m.png" alt="更改Oracle密码"><br>添加一些内核参数到<code>/etc/sysctl.conf</code>文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">fs.aio-max-nr = 1048576</div><div class="line">fs.file-max = 6815744</div><div class="line">kernel.shmall = 2097152</div><div class="line">kernel.shmmax = 1987162112</div><div class="line">kernel.shmmni = 4096</div><div class="line">kernel.sem = 250 32000 100 128</div><div class="line">net.ipv4.ip_local_port_range = 9000 65500</div><div class="line">net.core.rmem_default = 262144</div><div class="line">net.core.rmem_max = 4194304</div><div class="line">net.core.wmem_default = 262144</div><div class="line">net.core.wmem_max = 1048586</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/aal3l5y112m2p2afr44uj4xe/image_1bcddb1i9okkhjpu8t2up13kf23.png" alt="修改sysctl.conf文件"><br>让刚刚设置的参数立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/w579cwcm5tjd337fh1q2qsqt/image_1bcddgk00q4bpqv1i021ntpd7i2g.png" alt="sysctl -p"><br>查看所有的参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -a</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/avp96h10jkaa57k6h90c3g6j/image_1bcddhia5hmv16rgvcu17olesl2t.png" alt="sysctl -a"><br>设置oracle用户的上限在<code>/etc/security/limits.conf</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">oracle soft nproc 2047</div><div class="line">oracle hard nproc 16384</div><div class="line">oracle soft nofile 1024</div><div class="line">oracle hard nofile 65536</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/5kc8zluwk5dezzo06cw7ku6r/image_1bcddoaca11aa17ur1v9i1qf37cv3a.png" alt="设置oracle用户上限"><br>首先用ftp将压缩包传到linux上，然后解压oracle压缩包到<code>/oraclepackage</code>目录下,这里解压要等一会，可以去喝杯咖啡再回来看解压好了没有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y zip unzip</div><div class="line">ls</div><div class="line">unzip linux.x64_11gR2_database_1of2.zip -d /oraclepackage</div><div class="line">unzip linux.x64_11gR2_database_2of2.zip -d /oraclepackage</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/mjmjwhykdo7mixifyb7k9aya/image_1bcdec53m1p7b4hsv631smd1iml3n.png" alt="安装unzip"><br><img src="http://static.zybuluo.com/danerlt/hpugo055s2kuyayutbglttrt/image_1bcdeddi5gvc1ruj5u61ors1t1v44.png" alt="查看压缩包"><br><img src="http://static.zybuluo.com/danerlt/brz9qr3elt2im6stdopqwml8/image_1bcdemdrb1u9i9vr53911gt1mk04h.png" alt="解压压缩包1"><br><img src="http://static.zybuluo.com/danerlt/vk1gh87xlxy9nvzidulnif5e/image_1bcdf3kqov8favo1lnnel8nqj4u.png" alt="解压压缩包2"><br>这里解压好了要修改<code>/oraclepackage</code>目录的权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R oracle:oinstall /oraclepackage/</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/0c7uiqh7rh6ks33kjk3imago/image_1bcdfbkmctl97tmh91vea1a065b.png" alt="修改权限"><br>新建一个目录<code>u01</code>安装oracle,一个目录<code>u02</code>存放数据文件,然后修改拥有者和权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mkdir /u01</div><div class="line">mkdir /u02</div><div class="line">chown -R oracle:oinstall /u01</div><div class="line">chown -R oracle:oinstall /u02</div><div class="line">chmod -R 775 /u01</div><div class="line">chmod -R 775 /u02</div><div class="line">chmod g+s /u01</div><div class="line">chmod g+s /u02</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/y3lxx0jilops2i5piatycqhj/image_1bcdfff8l32rs5ctad1mk21lke5o.png" alt="新建目录并赋权"><br>安装需要的软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y binutils.x86_64 compat-libcap1.x86_64 gcc.x86_64 gcc-c++.x86_64 glibc.i686 glibc.x86_64 \</div><div class="line">glibc-devel.i686 glibc-devel.x86_64 ksh compat-libstdc++-33 libaio.i686 libaio.x86_64 libaio-devel.i686 libaio-devel.x86_64 \</div><div class="line">libgcc.i686 libgcc.x86_64 libstdc++.i686 libstdc++.x86_64 libstdc++-devel.i686 libstdc++-devel.x86_64 libXi.i686 libXi.x86_64 \</div><div class="line">libXtst.i686 libXtst.x86_64 make.x86_64 sysstat.x86_64</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/eaf80yihfuwnc8fu8ta27mer/image_1bcdfk3iq41e1q571r53100ahuk65.png" alt="安装软件包1"><br><img src="http://static.zybuluo.com/danerlt/0drqslttied7ijdl1qu487d2/image_1bcdfl6ev182t12s3dmleim19096i.png" alt="安装软件包2"><br>恭喜你,完成这一步就可以进行图形化的界面安装了,具体可以查看<a href="https://litao.work/">centos 安装Oracle 11(二)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;写这个文档一是为了记录下自己安装Oracle和配置的一些步骤，以备以后查看，二是在安装文档时找不到一般比较好的中文版介绍，安装时参考的&lt;a href=&quot;https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1&quot;&gt;https://wiki.centos.org/HowTos/Oracle12onCentos7#head-172a15fb5e1115fcae130f7ac01149a35fde01d1&lt;/a&gt;,文档只要安装时的命令，没有截图，我加上了大部分命令运行的截图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意:本文主要讲解到图形化安装前的配置,因为Oracle安装需要使用256位的图像显示,所以图形化界面的安装请戳&lt;a href=&quot;https://www.baidu.com&quot;&gt;这里&lt;/a&gt;.&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装.NET Core</title>
    <link href="http://litao.work/2017/03/27/centos%E5%AE%89%E8%A3%85-NET-Core/"/>
    <id>http://litao.work/2017/03/27/centos安装-NET-Core/</id>
    <published>2017-03-27T04:32:18.000Z</published>
    <updated>2017-08-30T07:27:49.960Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>.NET Core 是.NET Framework的新一代版本，是微软开发的第一个官方版本，具有跨平台 (Windows、Mac OSX、Linux) 能力的应用程序开发框架 (Application Framework)，未来也将会支持 FreeBSD 与 Alpine 平台，也是微软在一开始发展时就开源的软件平台<a href="http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png" target="_blank" rel="external">1</a>  ，它经常也会拿来和现有的开源 .NET 平台 Mono 比较。<br>由于 .NET Core 的开发目标是跨平台的 .NET 平台，因此 .NET Core 会包含 .NET Framework 的类库，但与 .NET Framework 不同的是 .NET Core 采用包化 (Packages) 的管理方式，应用程序只需要获取需要的组件即可，与 .NET Framework 大包式安装的作法截然不同，同时各包亦有独立的版本线 (Version line)，不再硬性要求应用程序跟随主线版本。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装-net-core"><a href="#安装-net-core" class="headerlink" title="安装.net core"></a>安装.net core</h2><h3 id="安装依赖的库文件"><a href="#安装依赖的库文件" class="headerlink" title="安装依赖的库文件"></a>安装依赖的库文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install -y libunwind libicu</div></pre></td></tr></table></figure>
<p><img src="http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png" alt="image_1bc6vmvlaetorpeqhhr0hu7i9.png-23.3kB"></p>
<h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><p>将压缩包下载的本地或者通过ftp上传到Linux上,我这里是用ftp上传的，所以名字不一样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?linkid=843449</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/cld14rbsk7p29apk06jo8dks/image_1bc6vq96b1o1afe61r5virt9a613.png" alt="image_1bc6vq96b1o1afe61r5virt9a613.png-13.3kB"></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>将压缩包解压到<code>/opt/dotnet</code>目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /opt/dotnet &amp;&amp; sudo tar zxf dotnet.tar.gz -C /opt/dotnet</div></pre></td></tr></table></figure></p>
<!--more-->
<p><img src="http://static.zybuluo.com/danerlt/fcrpepfzeodbouh8ziu6aamo/image_1bc6vvdrm1df148k1k17128p1u011g.png" alt="image_1bc6vvdrm1df148k1k17128p1u011g.png-9.5kB"></p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>将dotnet创建一个链接到<code>/usr/local/bin</code>目录下，从而达到在任何目录下都可以运行dotnet<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /opt/dotnet/dotnet /usr/local/bin</div></pre></td></tr></table></figure></p>
<p><img src="http://static.zybuluo.com/danerlt/017amet2egfea7737kpm62k5/image_1bc70608u1531nb019nj1cdu1hvv1t.png" alt="image_1bc70608u1531nb019nj1cdu1hvv1t.png-3.3kB"></p>
<h2 id="创建HelloWorld"><a href="#创建HelloWorld" class="headerlink" title="创建HelloWorld"></a>创建HelloWorld</h2><p>让我们来初始化一个简单的HelloWorld应用吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dotnet new console -o hwapp</div></pre></td></tr></table></figure></p>
<p>如图所示，表示创建成功。<br><img src="http://static.zybuluo.com/danerlt/ch9o5cca65cbylyqhjc0ux1e/image_1bc709o111a1g1gcs1qdpiq165d37.png" alt="image_1bc709o111a1g1gcs1qdpiq165d37.png-42kB"></p>
<h2 id="运行HelloWorld"><a href="#运行HelloWorld" class="headerlink" title="运行HelloWorld"></a>运行HelloWorld</h2><p>首先进入<code>hwapp</code>目录，然后运行即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd hwapp</div><div class="line">dotnet restore</div><div class="line">dotnet run</div></pre></td></tr></table></figure></p>
<p>如图所示，执行成功，dotnet core的环境就搭建好了。<br><img src="http://static.zybuluo.com/danerlt/ygor8jgr8og0qe2e3t2tqtqt/image_1bc70gghn1hvm18jp7811q91eh73k.png" alt="image_1bc70gghn1hvm18jp7811q91eh73k.png-28.8kB"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;.NET Core 是.NET Framework的新一代版本，是微软开发的第一个官方版本，具有跨平台 (Windows、Mac OSX、Linux) 能力的应用程序开发框架 (Application Framework)，未来也将会支持 FreeBSD 与 Alpine 平台，也是微软在一开始发展时就开源的软件平台&lt;a href=&quot;http://static.zybuluo.com/danerlt/spc58phzhxu8lpoz6vwneqfv/image_1bc6vmvlaetorpeqhhr0hu7i9.png&quot;&gt;1&lt;/a&gt;  ，它经常也会拿来和现有的开源 .NET 平台 Mono 比较。&lt;br&gt;由于 .NET Core 的开发目标是跨平台的 .NET 平台，因此 .NET Core 会包含 .NET Framework 的类库，但与 .NET Framework 不同的是 .NET Core 采用包化 (Packages) 的管理方式，应用程序只需要获取需要的组件即可，与 .NET Framework 大包式安装的作法截然不同，同时各包亦有独立的版本线 (Version line)，不再硬性要求应用程序跟随主线版本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="后端" scheme="http://litao.work/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://litao.work/tags/linux/"/>
    
      <category term="install" scheme="http://litao.work/tags/install/"/>
    
      <category term="centos" scheme="http://litao.work/tags/centos/"/>
    
  </entry>
  
</feed>
